{"Blog/2-Years-of-Running-Notes":{"title":"2 Years of Running Notes","links":["assets/2015-01-10-2-years-of-running-notes/the-hill.jpg"],"tags":["Running"],"content":"“How did it go, Peter?” is the placeholder that greets me in the Notes section when completing a run using RunKeeper. It’s unobtrusive, yet alluring. If you have not noticed it yet, it looks like this. It’s sandwiched between your run statistics and the obtrusive social media swagger mode.\n\nWhen I started running on January 2, 2013 (a new years resolution started one day late), I thought “I’m going to write something in there”. Here is what I wrote.\n\nBreathless. Running = hard!!!\n1 Jan 2013, 2.55 km, 6:42 min/km\n\nThis was after an embarrassing (only in hindsight) run. I didn’t even run the full distance.\nI’ve now been running consistently for 2 years, and in that time decided to write something into the alluring “How did it go, Peter?” about 70% of the time. Here are the major themes I’ve categorised the running notes into.\nFood\nObviously I felt hungry enough during this run to justify the use of the word juicy twice.\n\nPeople cooking juicy juicy BBQ steak &amp; sausages at night when I go running should be shot.\n18 Jan 2013, 5.22 km, 6:40 min/km\n\nSometimes I had the wrong type of food before a run.\n\nBleh. Cake NOT like run!\n22 Jan 2013, 5.27 km, 7:11 min/km\n\nOr drink.\n\nLearn to love the pain (with 2 beers)\n20 Dec 2013, 2.84 km, 4:39 min/km\n\nOf course sometimes I didn’t have enough.\n\nInsufficient Input\n4 Apr 2014, 5.08 km, 5:24 min/km\n\nGo through the motions\nSometimes I felt like an object.\n\nObject→Eat,Sleep,Work,Repeat\n8 Apr 2014, 4.16 km, 5:13 min/km\n\nOr was trying to outrun the residue of the week.\n\nShit run for a shit week.\n14 Mar 2014, 4.32 km, 6:03 min/km\n\nOr was on autopilot.\n\nCan’t be fu..ahh, “Recovery”. Yeah. That’s it. Recovery.\n5 Jun 2014, 5.11 km, 6:00 min/km\n\nThe Hill\nLet me introduce you to my nemesis. The Hill. It is not just a hill. It is a foreboding presence. Just looking at a photo of it fills me with dread.\nThe Hill\n\nWhen I try to ignore it, it calls to me.\n\nFrom its shadow I feel it’s pull. Come. Climb me. I am. The Hill.\n5 Mar 2014, 3.14 km, 5:12 min/km\n\nAnd when I finally give in, or find myself attempting to run up it and not knowing how I got there, it asserts itself.\n\nThe Hill Angry!\n7 Mar 2014, 6.75 km, 5:52 min/km\n\nAnd then sometimes, just sometimes, I put the wrong things right.\n\nThe one that I punish The Hill.\n22 Apr 2014, 4.13 km, 5:17 min/km\n\nThere is also a special section of The Hill which is called The Paul, when run in reverse, as fast as you can.\n\nThe Paul\n16 Jun 2014, 0.71 km, 3:28 min/km\n\nFeeling Good\nThe reason I kept running was because of the experience. I loved it, and it’s reflected in the majority of my running notes.\n\nFrom Friday to Sunday I Make My Girls Go Wild\n12 Jul 2013, 4.01 km, 5:30 min/km\n\n\nI won’t even make it to the shore without your light…\n20 Oct 2013, 7.03 km, 5:28 min/km\n\n\nCouldn’t change the magnetism at this rate I’m traveling\n02 Dec 2013, 3.89 km, 5:03 min/km\n\n\n&lt;3 “The Hill” - This is My Clarity\n06 Jan 2014, 7.02 km, 5:58 min/km\n\n\nChilly Bright not Stormy Night, but still … Paradise\n14 Jun 2014, 3.09 km, 4:58 min/km\n\nThe other 30% of the time I didn’t write a running note. Sometimes you just need to run. Try putting your feelings and thoughts into a running note after your next run."},"Blog/A-Cloud-Backend-using-Node.js-on-AWS":{"title":"A Cloud Backend using Node.js on AWS","links":["Blog/iOS-7-Dynamic-Type","Blog/iOS-7-UserXListView"],"tags":["Dev"],"content":"What?! You’re building an awesome mobile app, like this one -\niOS 7 Dynamic Type, and iOS 7 UserXListView,\nand get to the point where you need a backend.\nOh no! Your complexity just increased exponentially.\nLuckily the latest cloud computing XaaS (Everything as a service) is called a\nBaaS (Backend as a service).\nBaaS offerings include Parse (which was acquired by Facebook earlier this year),\nand the open source BaasBox.\nThe idea is that a BaaS abstracts the complexity of building a backend.\nBut is building a backend really all that difficult using cloud computing?\nLet’s find out and build a cloud backend using node.js on AWS.\nLet’s get started.\nNode.js\nFirst download and install Node.js, which is a platform for building applications in JavaScript.\nIt’s powered by the Google Chrome V8 JavaScript engine.\nIsn’t JavaScript slow? No!\n\n”V8 compiles JavaScript source code directly into machine code when it is first executed.\nThere are no intermediate byte codes, no interpreter.”, developers.google.com/v8/design\n\nNode.js is fast.\nWe’re going to use Node.js and node packages to expose web services for our awesome mobile app.\nWhy? There are lots of good articles that explain what Node.js is and what it’s good for.\nHere’s my simple take:\n\nThe web has changed from consumption (viewing web pages) to interaction (apps, social media, chat). We need better client/server technology.\nNode.js is JavaScript on the server, which lowers the learning curve for developers.\nNode.js has a strong open source community. NPM (Node Package Manager) is a repository\nof reusable components. There are currently over 50 thousand, with over 3 million downloads per day.\n\nThe goal is to build a cloud backend - expose a RESTful web API that supports OAuth 2.0, with a database.\nThis blog post should serve as the foundation to start you on that journey.\nWe will be using OS X Mavericks (Version 10.9), Terminal, and TextWrangler\nwhich is available free from the App Store.\nCreate and change to a new folder called cloudbackend from your Documents folder.\npeters-mac-mini:Documents peterboni$ mkdir cloudbackend\npeters-mac-mini:Documents peterboni$ cd cloudbackend/\npeters-mac-mini:cloudbackend peterboni$\nCreate a file called package.json and put the following JSON data object in it.\n{\n  &quot;name&quot;: &quot;cloudbackend&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;version&quot;: &quot;0.0.1&quot;,\n  &quot;private&quot;: true,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;node app&quot;\n  },\n  &quot;dependencies&quot;: {\n    &quot;express&quot;: &quot;3.x&quot;\n  }\n}\nUse npm (Node Package Manager) to install Express, which is the\ndependency you identified in the above package.json file. Express is a web\napplication framework. Enter ‘npm install’.\npeters-mac-mini:cloudbackend peterboni$ npm install\nnpm http GET registry.npmjs.org/express\n...\nexpress@3.4.6 node_modules/express\n├── methods@0.1.0\n...\n└── connect@2.11.2 (uid2@0.0.3, pause@0.0.1, qs@0.6.5, bytes@0.2.1, raw-body@1.1.2, negotiator@0.3.0, multiparty@2.2.0)\npeters-mac-mini:cloudbackend peterboni$\nCreate a file called app.js with the following content.\nAll we are doing here is exposing one HTTP GET method request, available at ‘/test’,\nwhich returns a JSON data object. A simple test.\nvar express = require(&#039;express&#039;),\n    http = require(&#039;http&#039;);\n \nvar app = express();\n \napp.set(&#039;port&#039;, process.env.PORT || 3000);\n \napp.get(&#039;/test&#039;, function(req, res) {\n  res.json({&#039;message&#039;:&#039;hi&#039;});\n});\n \nhttp.createServer(app).listen(app.get(&#039;port&#039;), function() {\n  console.log(&quot;Cloudbackend listening on port &quot; + app.get(&#039;port&#039;));\n});\nLet’s test it!\nEnter ‘node app’.\npeters-mac-mini:cloudbackend peterboni$ node app\nCloudbackend listening on port 3000\nNow open your favourite web browser, and navigate to http://localhost:3000/test\n\nCongratulations! You’ve just successfully built a RESTful web API with a single resource\ncalled test which is responding to a HTTP GET method request, and is returning a\nJSON data object.\nLet’s deploy our backend to the cloud.\nAWS\nWith AWS (Amazon Web Services) we can easily deploy our backend to the cloud while\nstill keeping flexibility and control - things that a BaaS takes away by abstracting the complexity.\nFirst sign up for the very generous AWS Free Usage Tier.\nThis simple tutorial should not result in charges to your account.\nWe are going to deploy cloudbackend as an Application into EB (Elastic Beanstalk)\nwhich is an AWS Application Container. The Architectural Overview shows and\nexplains what Elastic Beanstalk is.\n\nYou deploy your application to EB and it gets a unique URL - myapp.elasticbeanstalk.com\nAn Auto Scaling Group is created with at least 1 EC2 Instance (basically a VM - Virtual Machine).\nTraffic to your application URL first goes through the ELB (Elastic Load Balancer), and then to an EC2 Instance.\n\nOnce setup all AWS resources are automatically provisioned and configured.\nYou have a fully auto load balanced, auto scaled cloud application environment.\nNext, download and install Git.\nInitialise your cloudbackend Git repository. Enter ‘git init’, followed by\nthe other commands in the following console code block.\npeters-mac-mini:cloudbackend peterboni$ git init\nInitialized empty Git repository in /Users/peterboni/Documents/cloudbackend/.git/\npeters-mac-mini:cloudbackend peterboni$ cat &gt; .gitignore &lt;&lt;EOT\nnode_modules/\n.gitignore\n.elasticbeanstalk/\nEOT\npeters-mac-mini:cloudbackend peterboni$ git add .\npeters-mac-mini:cloudbackend peterboni$ git commit -m &quot;initial app&quot;\n[master (root-commit) 889e876] initial app\n 2 files changed, 26 insertions(+)\n create mode 100644 app.js\n create mode 100644 package.json\npeters-mac-mini:cloudbackend peterboni$\nNext download and extract the AWS Elastic Beanstalk Command Line Tool to\nyour Documents folder (the cloudbackend folder should be in your Documents folder).\nNext add the appropriate EB Python folder to your PATH.\npeters-mac-mini:cloudbackend peterboni$ export PATH=$PATH:/Users/peterboni/Documents/AWS-ElasticBeanstalk-CLI-2.5.1/eb/macosx/python2.7/\npeters-mac-mini:cloudbackend peterboni$\nIf you have OS X Mavericks (Version 10.9) then you already have Python 2.7.5, else you\nwill need to download and install it.\nNext we’re going to create and configure the cloudbackend AWS Elastic Beanstalk\nApplication Container. You basically enter ‘eb init’ and then follow the prompts.\n\nYou will need to enter your AWS Access Key ID and Secret Access Key, which\ncan be found at the URL given after you enter ‘eb init’.\nSelect an AWS service region. I entered ‘7’ for ‘Asia Pacific (Sydney)‘.\nAccept the default application and environment names by pressing return.\nEnter ‘8’, for ‘64bit Amazon Linux 2013.09 running Node.js’.\nEnter ‘1’, for ‘LoadBalanced’.\nEnter ‘n’, to skip creating an ‘RDS DB Instance’.\nEnter ‘1’, for ‘Create a default instance profile’.\n\npeters-mac-mini:cloudbackend peterboni$ eb init\nTo get your AWS Access Key ID and Secret Access Key,\n  visit &quot;aws-portal.amazon.com/gp/aws/securityCredentials&quot;.\nEnter your AWS Access Key ID (current value is &quot;AKIAJ*****GBOHQ&quot;): [enter yours here]\nEnter your AWS Secret Access Key (current value is &quot;MhYxu*****rJfZx&quot;): [enter yours here]\nSelect an AWS Elastic Beanstalk service region.\nAvailable service regions are:\n1) US East (Virginia)\n2) US West (Oregon)\n3) US West (North California)\n4) EU West (Ireland)\n5) Asia Pacific (Singapore)\n6) Asia Pacific (Tokyo)\n7) Asia Pacific (Sydney)\n8) South America (Sao Paulo)\nSelect (1 to 8): 7\nEnter an AWS Elastic Beanstalk application name (auto-generated value is &quot;cloudbackend&quot;):\nEnter an AWS Elastic Beanstalk environment name (auto-generated value is &quot;cloudbackend-env&quot;):\nSelect a solution stack.\nAvailable solution stacks are:\n1) 32bit Amazon Linux 2013.09 running PHP 5.4\n2) 64bit Amazon Linux 2013.09 running PHP 5.4\n3) 32bit Amazon Linux 2013.09 running PHP 5.5\n4) 64bit Amazon Linux 2013.09 running PHP 5.5\n5) 32bit Amazon Linux running PHP 5.3\n6) 64bit Amazon Linux running PHP 5.3\n7) 32bit Amazon Linux 2013.09 running Node.js\n8) 64bit Amazon Linux 2013.09 running Node.js\n...\nSelect (1 to 28): 8\nSelect an environment type.\nAvailable environment types are:\n1) LoadBalanced\n2) SingleInstance\nSelect (1 to 2): 1\nCreate an RDS DB Instance? [y/n]: n\nAttach an instance profile (current value is &quot;[Create a default instance profile]&quot;):\n1) [Create a default instance profile]\n2) aws-elasticbeanstalk-ec2-role\n3) [Other instance profile]\nSelect (1 to 3): 1\nUpdated AWS Credential file at &quot;/Users/peterboni/.elasticbeanstalk/aws_credential_file&quot;.\n \npeters-mac-mini:cloudbackend peterboni$\nNow we just start it. Be patient as this will take a few minutes.\n\nEnter ‘eb start’.\nEnter ‘y’, to ‘deploy the latest Git commit to your environment’.\n\npeters-mac-mini:cloudbackend peterboni$ eb start\nStarting application &quot;cloudbackend&quot;.\nWould you like to deploy the latest Git commit to your environment? [y/n]: y\nremote:\nremote: error: Unable to deploy application version: No Environment found for EnvironmentName = &#039;cloudbackend-env&#039;.\nremote:\nTo https://...:...@git.elasticbeanstalk.ap-southeast-2.amazonaws.com/v1/repos/.../commitid/.../environment/...\n * [new branch]      HEAD -&gt; master\n \nWaiting for environment &quot;cloudbackend-env&quot; to launch.\n2013-12-07 08:21:09 INFO  createEnvironment is starting.\n2013-12-07 08:21:14 INFO  Using elasticbeanstalk-ap-southeast-2-558573496878 as Amazon S3 storage bucket for environment data.\n2013-12-07 08:21:46 INFO  Created load balancer named: awseb-e-i-AWSEBLoa-SNLC5NAHWZWP\n2013-12-07 08:22:06 INFO  Created security group named: awseb-e-ib22smbwaz-stack-AWSEBSecurityGroup-1DE3TWOH4AYLK\n2013-12-07 08:22:10 INFO  Created Auto Scaling launch configuration named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingLaunchConfiguration-1NPGUDUWIC5YP\n2013-12-07 08:23:07 INFO  Waiting for EC2 instances to launch. This may take a few minutes.\n2013-12-07 08:23:07 INFO  Created Auto Scaling group named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD\n2013-12-07 08:23:10 INFO  Created Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:5c8b171d-262b-4286-8bbd-76ff9db15845:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleDownPolicy-18LWCZMRA7I4G\n2013-12-07 08:23:11 INFO  Created Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:d9a9f3df-b813-4ffe-9556-f2a7136aa69d:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleUpPolicy-ZSDGPZ6KHCRQ\n2013-12-07 08:23:14 INFO  Created CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmHigh-1AAZW8L054YWY\n2013-12-07 08:23:14 INFO  Created CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmLow-1OAGDWAQFGJTO\n2013-12-07 08:27:02 INFO  Successfully launched environment: cloudbackend-env\nApplication is available at &quot;cloudbackend-env-yey9npuvjz.elasticbeanstalk.com&quot;.\npeters-mac-mini:cloudbackend peterboni$\nLet’s test it!\nOpen your favourite web browser, and navigate to cloudbackend-env-yey9npuvjz.elasticbeanstalk.com/test\n\nReplace the domain part of the above URL with the domain you were given at the end of the ‘eb start’ process …\nApplication is available at “cloudbackend-env-*.elasticbeanstalk.com”.\n\n\nCongratulations! Your cloud backend is now working.\nNow to work on that awesome mobile app!\nLastly if you want to stop and delete the environment, use the following EB command.\nEnter ‘eb stop’, and then ‘y’ to terminate the environment.\npeters-mac-mini:cloudbackend peterboni$ eb stop\nTerminate environment? [y/n]: y\nStopping environment &quot;cloudbackend-env&quot;. This may take a few minutes.\n2013-12-07 09:24:44 INFO  terminateEnvironment is starting.\n2013-12-07 09:24:57 INFO  Deleted CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmLow-1OAGDWAQFGJTO\n2013-12-07 09:24:57 INFO  Deleted CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmHigh-1AAZW8L054YWY\n2013-12-07 09:25:00 INFO  Deleted Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:d9a9f3df-b813-4ffe-9556-f2a7136aa69d:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleUpPolicy-ZSDGPZ6KHCRQ\n2013-12-07 09:25:00 INFO  Deleted Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:5c8b171d-262b-4286-8bbd-76ff9db15845:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleDownPolicy-18LWCZMRA7I4G\n2013-12-07 09:25:03 INFO  Waiting for EC2 instances to terminate. This may take a few minutes.\n2013-12-07 09:26:15 INFO  Deleted Auto Scaling group named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD\n2013-12-07 09:26:19 INFO  Deleted Auto Scaling launch configuration named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingLaunchConfiguration-1NPGUDUWIC5YP\n2013-12-07 09:26:22 INFO  Deleted security group named: awseb-e-ib22smbwaz-stack-AWSEBSecurityGroup-1DE3TWOH4AYLK\n2013-12-07 09:26:25 INFO  Deleted load balancer named: awseb-e-i-AWSEBLoa-SNLC5NAHWZWP\n2013-12-07 09:26:28 INFO  Deleting SNS topic for environment cloudbackend-env.\nStop of environment &quot;cloudbackend-env&quot; has completed.\npeters-mac-mini:cloudbackend peterboni$\nIf you get stuck, you can always try checking out the Amazon documentation -\nDeploying an Express Application to AWS Elastic Beanstalk.\nI may cover topics like adding a custom domain name, SSL, OAuth 2.0 support, a\ndatabase, or web pages to your cloud backend in future posts if there is interest."},"Blog/All-Along-the-Watchtower":{"title":"All Along the Watchtower","links":[],"tags":["Story"],"content":"He sat on the bus in the pre-dawn light. Fog partially covered the windows. The inside of the bus felt enclosed in a safe bubble type of way with other silent, faceless souls, the backs of their heads illuminated by the smartphones their heads were buried in.\nThe brief hint of a smile, or maybe sadness touched his face as he thought of the irony, people connected to the world, but isolated from others in their own bubbles. Lights flashed past the windows as the bus ambled along.\nAs if in a dream, he slowly turned his head and looked out the window. In awe, he watched where the approaching lights silently moved from the clear part of the window to the fogged part, they suddenly transformed, almost spewing their aura outward in a bright halo effect. The fog combined with the escaping darkness seemed to act as a visible screen to their true essence, their souls, which was otherwise obscured.\nThe bus came to a stop. He was still looking out the fogged part of the window as his eyes focused on what looked like, incredibly, a rider on a horse approaching in the distance. He felt locked in place and unable to move his head to see if the rider would disappear when viewed through the clear part of the window. As the rider got closer his eyes shifted, and he saw another rider on a horse behind. Two riders. The wind began to howl against the side of the bus.\nAll Along the Watchtower"},"Blog/App-Dev-is-not-Rapid":{"title":"App Dev is not Rapid","links":["Blog/Creating-Software"],"tags":["Dev"],"content":"Application Development is not Rapid. There, I finally typed it. It feels like a weight off my fingers. I have been creating applications for over 20 years, and do a damn good job of it. I’m not arrogant, there are many developers that are smarter, more creative, or more productive. If I was to describe myself as a developer in one word I’d say simple, which is kind of funny, because fear of being labelled that has stopped me writing this in the past. This is a post based on my thoughts and feelings at the state of application development.\nI have written before about why I create software, and my struggle with software development complexity. I’m going to tell a story about my experience with the Technology, and it’s contribution to the People, Process and Technology triad when building applications.\nMy first job out of university was doing Microsoft Access ‘database’ development for a large mining company. I put database in quotes because I didn’t think of Access as strictly a database at the time. We built tables with constraints and relationships, queries, forms, reports, and logic (macros and VBA). Mostly via point and click, and writing simple code. We built applications. It was and still is amazing to me how much two Access developers built, with one of them being so naive and inexperienced.\nI then progressed to building a web application, using HTML, CSS, JavaScript, ColdFusion (version 4.0 from 1999) and SQL Server. There’s a few more technologies there than my Microsoft Access experience, but ColdFusion rocked. It joined the other technologies together seamlessly, and it made creating an application rapid. I felt productive.\n\nTo me rapid development meant quickly building working application software that fulfilled a need with simple, powerful tools. It meant building and joining together the parts in an easily learned, understood, and consistent way that supported change.\n\nWhere did I find myself after a few experiences of rapid application development? I found myself in the distinctly non-rapid world of enterprise systems development. There was titanic Sun, IBM, Oracle and Microsoft technologies. I found myself submerged in Sun Java, J2SE, J2EE, IBM WebSphere, Oracle Database, and Microsoft .NET and Servers. Within each one I used a dizzying array of technologies - to use an abstract term to describe the things you could use and the ways you could use them. There were plenty of acronyms that made you feel accomplished if you knew what they stood for, even if you didn’t know what they did.\nMy view of web application architecture had exploded from a few technologies to many, many layers of them. ColdFusion was replaced by an astoundingly complex maze of choices. Want to display a database field on the screen? Oh, not so quick Mr Simple Developer. We need to do it in a modern, best practice, scalable way. I did not feel productive.\nThis is where some people would stop me in my story, call me a non-believer, and then begin to preach the virtues of their given religion. I have no desire to go into any of them here. All I will say is that I’ve seen people wield them as weapons, instead of collaborating with people to use them. The criteria I evaluate technology by is pretty simple. Can I understand it? Does it make sense in my gut? This may seem like a simpletons view, but it’s proven correct time and again. Is it simple to understand and work with quickly? How many layers of abstraction or indirection are there? What value do they add? Is there a simpler way to do it? Would other people understand what it’s doing? How about in 5 years? Is it closed, open, popular? What does it feel like to use?\nMicrosoft Access and ColdFusion still exist 13 years after I used them. Access 2013 looks like it’s been given new Metro (sorry, Windows 8-style UI) and web coats, but underneath it looks like the same animal that has not evolved in over a decade. There are rapid application development platforms and tools out there, but why haven’t they evolved, and become more widely used for application development? particularly enterprise systems development?"},"Blog/App-to-API-Connection-Trust":{"title":"App to API Connection Trust","links":[],"tags":["Apps","APIs","Dev","Mobile"],"content":"Update August 08, 2020\nWith the advent of iOS 14.0 there is a better way to do this now, check out App Attest.\nWhy\nI’ve been sporadically building a mobile app as a side project.\nFor years. Yes, years.\nI’ve been building it for a few reasons.\nOne of them is that it’s a way to escape and relax.\nAnother is that it’s a way to stay curious and keep learning.\nThe rest of the reasons and the mobile app however is a post for another time.\nLet’s get to this post.\nAs part of building the mobile app I needed to retrieve weather data for the users current location.\nA design decision I made is that the mobile app is fully native to the iOS platform and Apple ecosystem.\nTherefore one constraint is that I didn’t want to introduce a separate identity system that would have impacted the user experience, and also meant I had to deal with the corresponding security concerns.\nI wanted a way to retrieve the weather data in the most trusted way possible - to respect the user, their data (current location), and hence their privacy.\nSolution\nHere’s the solution that I designed and built with full credit to Graeme Foster\nfor giving me the concept for the critical part - how to secure the app to the API.\n\nThe solution is as follows:\n\n\nPart 1: HTTPS and MSTA: When calling the API from the app implement SSL/TLS (no brainer), but more importantly MSTA (Manual Server Trust Authentication), i.e. SSL Pinning, to prevent MITM (Man In The Middle) attacks. Don’t you love acronyms!\n\n\nPart 2: Secure App to API: When calling the API from the app implement a trusted connection - this involves the app ‘registering’ with the API and being given a SecretKey via a trusted secure channel, that it uses on subsequent API calls. See APNs (Apple Push Notification service) which I use for this, and explain in more detail below.\n\n\nAPNs delivery of remote notifications comes with some pretty heavy disclaimers in the Apple documentation linked to above, but I still decided to use it to implement the second part of the connection trust because:\n\n\nThe pattern only relies on using the remote notification occasionally, i.e. when the device token changes.\n\n\nThe app feature is optional - it reduces the user experience slightly, but it doesn’t really matter if it doesn’t work. For example, the user could decide to not give the app notification permission.\n\n\nIt’s an Apple built and operated method to deliver data to an app on a device via a trusted secure channel.\n\n\nThe following two sections go into detail on how to implement the two parts of the solution.\nNote that only simplified non-production code snippets are shown for brevity. This is not industrialised and tested code.\nMSTA (Manual Server Trust Authentication)\nMSTA is pretty simple when calling APIs using the standard Foundation URLSession request. It may be easier with a third party library, but I prefer to minimise use of dependencies.\nSee the Apple documentation Performing Manual Server Trust Authentication which clearly documents when and how you can perform MSTA for this scenario.\n\nYou want to reject credentials that would otherwise be accepted by the system. For example, you want to “pin” your app to a set of specific keys or certificates under your control, rather than accept any valid credential.\n\nHere is a Swift code snippet that performs the MSTA. It has the API host hard-coded to 192.168.0.7, i.e. the API is local.\nstruct Certificates {\n \n    static let localhost = Certificates.certificate(filename: &quot;localhost&quot;)\n    \n    private static func certificate(filename: String) -&gt; SecCertificate {\n        \n        let filePath = Bundle.main.path(forResource: filename, ofType: &quot;der&quot;)!\n        let data = try! Data(contentsOf: URL(fileURLWithPath: filePath))\n        let certificate = SecCertificateCreateWithData(nil, data as CFData)!\n        \n        return certificate\n    }\n}\n \nextension APIHelper: URLSessionDelegate {\n \n    func urlSession(_ session: URLSession,\n                    didReceive challenge: URLAuthenticationChallenge,\n                    completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -&gt; Void) {\n        \n        let protectionSpace = challenge.protectionSpace\n \n        // 1\n        guard protectionSpace.authenticationMethod ==\n            NSURLAuthenticationMethodServerTrust,\n            protectionSpace.host.contains(&quot;192.168.0.7&quot;) else {\n                completionHandler(.performDefaultHandling, nil)\n                return\n        }\n \n        // 2\n        guard let serverTrust = protectionSpace.serverTrust else {\n            completionHandler(.performDefaultHandling, nil)\n            return\n        }\n \n        // 3\n        if checkValidity(of: serverTrust) {\n            let credential = URLCredential(trust: serverTrust)\n            completionHandler(.useCredential, credential)\n        } else {\n            completionHandler(.cancelAuthenticationChallenge, nil)\n        }\n    }\n    \n    func checkValidity(of: SecTrust) -&gt; Bool {\n \n        let bundleCert = Certificates.localhost\n        let serverCert = SecTrustGetCertificateAtIndex(of, 0)\n \n        let bundleCertData = SecCertificateCopyData(bundleCert) as NSData\n        let serverCertData = SecCertificateCopyData(serverCert!) as NSData\n \n        if !serverCertData.isEqual(to: bundleCertData as Data) {\n            return false\n        }\n \n        return true\n    }\n}\nAnd here is an explainer of what’s happening in the code snippet:\n\n\nThe challenge type is server trust, and not some other kind of challenge. The challenge’s host name matches the host that you want to perform manual credential evaluation for.\n\n\nAttempt to get the serverTrust property from the protection space. Fall back to default handling if the property is nil.\n\n\nPass the server trust to a private helper method checkValidity(of:) that compares the certificate in the server trust to known-good values stored in the app bundle.\n\n\nI also found the following tutorial Preventing Man-in-the-Middle Attacks in iOS with SSL Pinning useful to understand how to retrieve the certificate from the API server and add it to the Xcode project.\nThe following terminal snippet copies the certificate output to openssl x509, specifies DER encoding and outputs it to a new file named localhost.der.\n$ openssl s_client -connect 192.168.0.7:5001 &lt;/dev/null \\\n    | openssl x509 -outform DER -out localhost.der\nSecure App to API\nAfter I implemented MSTA, it was time to build the second part of the solution.\nHere’s a sequence diagram showing detail of the interactions of the components.\n\nThe following sections show code snippets for how I implemented the main steps in the register process, and then finally authenticating the device/app on subsequent API calls.\nRegister - App: Request\nThe first step is to register the device with the API. You do this from the didRegisterForRemoteNotificationsWithDeviceToken method in AppDelegate.swift.\nfunc application(_ application: UIApplication,\n                    didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n    \n    deviceTokenEncoded = deviceToken.hexEncodedString()\n    _ = APIHelper.register(deviceToken: deviceTokenEncoded)\n}\n{% endhighlight %}\n \nHere&#039;s how you turn the ```deviceToken``` as ```Data``` into an API friendly hex string as an extension.\n \n{% highlight swift %}\nextension Data {\n    \n    struct HexEncodingOptions: OptionSet {\n        let rawValue: Int\n        static let upperCase = HexEncodingOptions(rawValue: 1 &lt;&lt; 0)\n    }\n    \n    func hexEncodedString(options: HexEncodingOptions = []) -&gt; String {\n        let format = options.contains(.upperCase) ? &quot;%02hhX&quot; : &quot;%02hhx&quot;\n        return map { String(format: format, $0) }.joined()\n    }\n}\nRegister - API: Create Secret Key for Token, Send Push Notification\nThe next step in the register process is to create the SecretKey from the Token, and send the push notification. I chose to build the API as an AWS Lambda ASP.NET Core Web API project, and use AWS SNS (Simple Notification Service) to send the push notification, so here’s a code snippet from the RegisterController.cs class.\n[HttpPost]\npublic async Task&lt;ActionResult&lt;Response&gt;&gt; PostAsync(RegisterRequest registerRequest)\n{\n...\n    try\t\n    {\n        String secretKey = Hash.Create(registerRequest.Token, Secrets.SecretKeySalt);\n \n        await RegisterWithSNS(AWSAppSettings.SNSApplicationARN, registerRequest.Token);\n        await Publish(secretKey);\n    }  \n    catch(Exception e)\n...\nHere’s how I hashed the token with a salt.\npublic static string Create(string value, string salt)  \n{  \n    var valueBytes = KeyDerivation.Pbkdf2(  \n                        password: value,  \n                        salt: Encoding.UTF8.GetBytes(salt),  \n                        prf: KeyDerivationPrf.HMACSHA512,  \n                        iterationCount: 10000,  \n                        numBytesRequested: 256 / 8);  \n \n    return Convert.ToBase64String(valueBytes);  \n}\nRegister - App: Receive Push Notification\nThe last step in the register process is to accept the SecretKey from APNs in the app, and securely store both the Token and SecretKey in the Keychain for use on subsequent API calls. Here’s a code snippet from the didReceiveRemoteNotification method in AppDelegate.swift.\nfunc application(_ application: UIApplication,\n                    didReceiveRemoteNotification userInfo: [AnyHashable : Any],\n                    fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -&gt; Void) {\n    \n    if let deviceToken = deviceTokenEncoded,\n        let secretKey = userInfo[&quot;secretKey&quot;] as? String {\n    \n        if KeychainHelper.get(account: deviceToken) == nil {\n            _ = KeychainHelper.add(account: deviceToken, password: secretKey)\n        } else {\n            _ = KeychainHelper.update(account: deviceToken, password: secretKey)\n        }\n    }\n}\nSubsequent API Calls\nOnce the Register Process has been done, this is how I authenticate the device/app on subsequent API calls.\nHere’s a code snippet from the WeatherController.cs class.\n[HttpPost]\npublic async Task&lt;ActionResult&lt;Response&gt;&gt; PostAsync(\n    WeatherRequest weatherRequest)\n{\n...\n    if (!Hash.Validate(\n            weatherRequest.Token,\n            Secrets.SecretKeySalt,\n            weatherRequest.SecretKey)) {\n \n        // Authentication failed\n        ...\n    }\n \n    // Authentication successful\n...\nHere’s how Validate works in combination with the has Create method above.\npublic static bool Validate(string value, string salt, string hash)  \n    =&gt; Create(value, salt) == hash;  \nA Final Note\nThis article is concerned with respecting the user, their data, and hence their privacy.\nProcessing and storing user data securely is not easy.\nIf you are building a mobile app to provide an experience, start from the user’s perspective and strongly assess what user data you need to process and store, and how you should do it.\nIf you need to store data for a backup, sync across devices or sharing to other users, Apple (and others) provide increasingly capable Backend as a Service (BaaS) offerings."},"Blog/Circular":{"title":"Circular","links":[],"tags":["Story"],"content":"As his body left the bus, and his foot struck the pavement, time slowed. His thoughts went immediately to the unknown man and he dreaded the unintelligible call “G.. y.. b.. i.. h…”, like a gong mechanically sounding the impending end of the world. The unknown man always appeared the same; raggedy unwashed hair, unshaven, old dirty clothing. His thoughts moved away from the unknown man, and he headed for the gate.\nHe walked along the path, early morning sunlight shining down through the criss-crossed metal gate, hitting the left hand side of his face. His eyes closed, seemingly by themselves to shield against the bright light. He contemplated the warmth of the sun on his face.\nReluctantly he willed his eyes to slowly open. They squinted and then closed again. Black bars rolled over his closed eyelids as he walked, in a hypnotic rhythm, the effect of the sunlight being blocked by the metal that formed the gate squares. He found it harder to will his eyes open as he walked.\nWhen his eyes closed he could hear and experience parts of the world that were before drowned out by his visual sense. He heard the sounds of the people around him. Walking. Stomping. Stopping. Starting. Conversing. The birds. Cars. Buses. The cacophony was strangely familiar. He felt himself being pulled past the unknown man, as time began to slowly speed back up.\n”G.. y.. b.. i.. h…” the unknown man intoned. He couldn’t make out what the man was saying, but the way the man spoke synced with his walking, the sunlight and black bars, the sounds. There was rhythm. Everything was moving together. It was coming again, he could hear it before the man began, “G.. y.. b.. i.. h…“.\nAnd then suddenly it was all gone. As his body left the bus, and his foot struck the pavement, time slowed. He had the feeling that he had been here before."},"Blog/City-to-Surf":{"title":"City to Surf","links":[],"tags":["Life","Running"],"content":"This is a challenge to my future 2015 self, for the City to Surf 12km run. Beat this!\nMy 2013 Self\n\nMy 2014 Self\n\nAverage pace: 30 seconds per km faster next year!"},"Blog/Communication":{"title":"Communication","links":["assets/2013-09-01-communication/photo.jpg"],"tags":["Life","Work"],"content":"There has probably been millions of words written about communication. So why bother? We communicate every day, but most of us take it for granted. We think we know how to do it, but do we really consider the massive impact it has on our lives? Do we actively try to get better at it?\nI vividly remember my daughter around the age of 3 when learning to express herself would suddenly blurt out ‘I don’t like it’, or ‘That makes me sad’. I remember feeling proud, but at the same time flustered, and sometimes annoyed because of the timing. She was doing what my wife (an infinitely better communicator than me) had taught her to do, to vocalise her feelings without thinking, just throw them out there. Before she learnt to do this she used to get frustrated and express her feelings in other ways, the most common of which was crying.\nSo if expressing your feelings and thoughts effectively is one part of communication the other part is what comes back to you once you do this, and what you do with it. My daughter is 5 1/2 now, and can engage in meaningful communication, interspersed with periods of her imagination taking control. I notice that when I say something to her, she will pause, and then immediately respond with a question, or less frequently an interesting factoid that she draws out from her limited experience. She does this with an openness that I find refreshing and disarming. Her words, tone, and body language are all aligned with a genuine interest. There’s not a shred of guile.\nOf course as adults we all know how much more complex it gets. There are far more less effective ways to communicate than in person. I wish I could convey to you how much I dislike email and it’s seductive call, but alas, I’m still learning.\nI have this surreal mental movie of us all as adults. We’re walking around in a shared existence, but within our own bubbles of reality. We have goggles strapped to our heads that we can’t take off. These goggles are much like camera lenses that can have multiple filters stacked on. The goggles protect our eyes, but they also filter our vision. As we grow our eyes change but then so too do the goggles, as filters are added, changed, or removed. I wonder what would happen if we were to regularly pause and consider what we are, and how we communicate with those around us.\nThere has probably been millions of words written about communication. So why bother? Because I’m actively trying to get better at it.\n\nPhoto (Original)"},"Blog/Consistency":{"title":"Consistency","links":["Blog/Running-Numbers"],"tags":["Running"],"content":"In January I paid RunKeeper to use the data I gave them the previous year, and give me insight. The numbers and charts were disappointing. This wasn’t insight I thought to myself. I wrote that what mattered was the experience. One year later and RunKeeper still charge you for insight.\n\n\nI discovered that RunKeeper enables you to export your data. ‘Get your export on’ as RunKeeper says. I downloaded my activity data as CSV, and attempted to analyse it.\nWhat do you do with lots of data? Add up the numbers of course. I wanted to compare the last 2 years. The numbers were again disappointing. They didn’t tell me anything interesting that I didn’t already know. More workouts meant more duration and calories burned. Less cycling meant less distance and climb.\nIt was time to visualise the data for 2014 with some charts. Maybe charts would give me insight. First I charted workout duration, with a linear trend line.\n\nThe trend line showed me that my workout time had increased during the year. Combined with the data points a picture of consistency over the year emerged. I had a sudden realisation. I knew this already!\nThe RunKeeper app has a ‘workouts per week’ chart on the ‘Me’ tab. It’s a simple and effective visual of how many workouts you do per week, for the last 10 weeks. I realised that I had been using it during the year to motivate myself. I had been aiming for at least 3 workouts per week. If I fell behind one week, I would workout more the next.\n\nNext I charted workouts per week, with a monthly moving average trend line.\n\nThis chart showed me a picture of where my consistency changed. In February I went on a work trip to New Zealand and San Francisco, and in April I had a few weeks holiday. Of course the data doesn’t tell the full story. I did a lot of walking in New Zealand and San Francisco which I didn’t record in RunKeeper.\nThe wearable devices wave is coming. We will be capturing more data about ourselves than ever before. This will create many possibilities, and raise many more questions. We need to use these devices to enhance our experience, and drive our consistency. And remember you don’t need to pay for insight. Just do it."},"Blog/Creating-Software":{"title":"Creating Software","links":[],"tags":["Dev"],"content":"Hi my name is Peter and I’m a developer, now playing an architect, and still trying to figure out what that means. But that’s a post for another day. Probably many posts.\nTo put this post in context my background is mostly ‘front end’ software development in DOS, Windows, Web, and Mobile; mostly with software that has a user interface, but occasionally not.\nComplexity\nI have always struggled with software development complexity.\nI love software development. Communicating and collaborating with people and computers, thinking, planning, modelling, designing, delving into my creative mind and soul, engineering and crafting software that fulfils a need, creating is … awesome!\nSoftware development is complex, but I believe we make it more complex. In our quest to make software development better, we lose focus, and we end up creating complexity.\nProcess\nComplexity can exist at many different steps in the software development journey. What do you do with something that’s complex? You create a process to perform it of course.\nPerhaps the most infamous process is the waterfall model.\n\n‘The waterfall model is a sequential design process, often used in software development processes, in which progress is seen as flowing steadily downwards (like a waterfall) through the phases of Conception, Initiation, Analysis, Design, Construction, Testing, Production/Implementation, and Maintenance.‘\n\nSounds great doesn’t it? Follow a detailed plan, err … ‘phases in a waterfall’, and you will have software at the end of the process that fulfils your need. People have been following it for decades. There’s only one problem.\n\n‘The first formal description of the waterfall model is often cited as a 1970 article by Winston W. Royce, although Royce did not use the term “waterfall” in this article. Royce presented this model as an example of a flawed, non-working model.‘\n\nBut this didn’t stop people from using it. Still hasn’t. Perhaps there is perceived safety in process. If you follow instructions, surely you will achieve the desired end result?\nOn my first agile project we delivered a green fields software system in 8 months, which would have taken years using our traditional software development process, and this included learning an agile process, tools and techniques. After the project ended I returned to one of the traditional software development areas. Two things struck me like physical blows, and left me with a feeling of complete loss and bewilderment.\nThe first was that email was my process again. I sent more emails in that first day than in the previous 8 months. The second thing was when I was sitting in my little cubicle, nicely partitioned, I overheard a conversation between two developers - “Reject defect #537. That’s not a defect because…” I forget the specifics, but remember that it was two developers, an absurd defect number, and they literally talked about it for 10 - 15 minutes. It never occurred to them that they should go find the tester and talk to them.\nTechnology\nProcesses can be complex, and so can the dizzying universe of technology which is created and wielded by people.\nProgramming languages are used to build software, and there are thousands of them, with more being created every year. Each one has it’s own syntax (form) and semantics (meaning) for expressing it’s instructions to a machine.\nThere are different types of software. For example operating systems manage hardware and provide services for other software. Platforms, frameworks, libraries, and applications use operating systems, and each other.\nEach piece of software can be complex, and working software can be a complex web of relationships between them. Just how complex can be highlighted by a seemingly absurd comparison.\n\n‘For decades computer scientists have strived to build machines that can calculate faster than the human brain and store more information. The contraptions have won. … Biology does a lot with a little: the human genome, which grows our body and directs us through years of complex life, requires less data than a laptop operating system.‘\nMark Fischetti, Computers versus Brains\nScientific American, November, 2011\n\nIt takes time to understand technology, when to use it, and how to apply it, and people often come away with different understanding, and a different level of skill in using it.\nEarly in my career I was working on a project when it was decided a well known services company (name withheld) would come in, save the day, and show us how to do it properly. There was one recognised expert I will always remember. He sat quietly aloof at his desk every day, apart from the occasional very important closed door meeting. Each day he would take from his desk a book from the vast array of ‘software development’ books on it (his personal collection), sit there with it in front of his computer and implement some new form of best practice code or pattern for the part of the project he was working on. He was seen as highly productive.\nWhen he left his masterpiece was given to me, with no hand over. You can guess the outcome. It was either the most brilliant code I have ever seen in my entire life, and I was unworthy to begin to comprehend it’s magnificence, or it was a pile of shit. The truth was probably somewhere in the middle.\nThe sad thing is I’ve seen this behaviour to varying degrees consistently over the years. It’s something I have been guilty of as well. People wielding technology, rather than collaborating with people using technology.\nSimplicity\nWhen I think about software development I think about the following words in a positive, great context.\nPeople.\nPurpose.\nKnowledge.\nCapability.\nHumility.\nCommunication.\nCollaboration.\nCompromise.\nConsistency.\nPassion.\nTime.\nTechnology.\nSimplicity.\nI put people first. They are the enduring thread that ties man to machine, and getting it to do what they want. Process and Technology seem to forget that sometimes.\nI put technology second last. Without everything before it, it is useless.\nI put simplicity last. I believe it will emerge if you have the rest.\nIf only we had all of these things, all of the time.\nYou can create software without some of these things, but not great software."},"Blog/Cylon-Style":{"title":"Cylon Style","links":[],"tags":["Life"],"content":"I received a message on May 7, 2013 that turned into a short lesson about differences, with a rather funny ending. I saved a photo of the conversation and still think about it even now.\nFirst, some background. This person has the soul of a Cylon. Not one of the new humanoid models, but one of the early toaster models. He’s quietly confident and communicates with the minimum amount of words available in our language to convey meaning.\nThe incoming message simply read ‘you got 10 minutes for a chat tonight ?‘. Immediately I smiled as the message was all lowercase. To me it’s kind of like people on LinkedIn using all lowercase for their name. Yes, they do exist.\nI replied asking if it could wait until tomorrow. The reply was one word, all lowercase - ‘can’. At this point I was amused enough to make fun of him. I replied ‘Like I said … war-era Centurion model Cylon’. The reply came back, once again one word, all lowercase - ‘efficiency’.\nI thought about this for a moment. We were communicating but the replies weren’t what I expected, i.e. a few well constructed words or sentences. I shot back ‘Where’s the passion or love in efficiency?‘. The reply came and I laughed out loud - ‘it’s in there cylon style’.\nTouché Cylon.\n"},"Blog/Day-One-2-Obsidian":{"title":"Day One 2 Obsidian","links":[],"tags":["Life","Dev"],"content":"📖 💎 Convert your Day One journal to an Obsidian vault folder 🙌\nI’ve long used Day One for journaling - dayoneapp.com/\nRecently I’ve become obsessed with Obsidian - obsidian.md/\nI thought it would be cool if I could convert my years of Day One journal entries into an Obsidian vault folder.\n🚀 So I wrote some code to do just that! Check it out if you have the same need - dayone2obsidian\nBeing able to view and explore all my Day One journal entries as a tag cloud in Obsidian is very cool.\nI hope no one at work looks at my weekend code! 🤫\n"},"Blog/Demon-Hacker":{"title":"Demon Hacker","links":[],"tags":["Apps","Dev"],"content":"In early 1995 (17 years ago) I created an MS-DOS app called Demon Hacker.\nIt’s purpose was to enable a user to patch (rather crudely, but effectively) PC games files and their created saved game files to cheat.\nI got more of a kick out of building the app using Turbo Pascal, and giving it to my friends to use than I did playing and cheating in the games.\n17 years is a long time in computer technology. In 1995 the Internet was emerging, and I knew that it had been put on a few FTP sites, but could I find it now?\nAfter a few minutes with Google I had found and downloaded the ZIP file. (And made sure to scan it with antivirus software).\nWow!\nThe problem now was that it was a 16-bit MS-DOS app.\nWith only Mac OS X Mountain Lion, and Windows 7, both 64-bit, I thought I would have to resort to setting up a VM (Virtual Machine).\nAnother Google and I found DOSBox. I download and opened DOSBox on Mac OS X.\nDouble wow!\nI now had a directory listing. Look at those dates!\n\nCheck out DEMON.EXE. That’s 29,408 bytes for the main application.\nUI (User Interface).\nLogic.\nEverything.\nThat’s 29 kilobytes (KB).\nHoly crap!\nNext step, would it run?\nBOOM!\nAn app that I had created 17 years ago was running in a DOS emulator on my Mac OS X system.\n\nHere’s the proof - the help screen. You have to admit, it’s very helpful :)\n\nIt even supports in that 29 KB size changing the application font to a medieval type font. Typical font files are MB these days.\n\nThe great thing about Demon Hacker is that it was open. Extendable. Anyone with a PC game, a HEX editor, and some spare time could create hacks for games by editing the DEMON.DAT text file.\n{\n    Alone in the Dark\nsave[0..5].itd\nsave??.itd\n//25700 oil for the lamp\n19856,64\n19857,64\n//25700 rifle ammo\n19866,64\n19867,64\n//25700 health points\n19882,64\n19883,64\n//25700 pistol ammo\n20024,64\n20025,64\n}\nAnd Demon Hacker would then let anyone use that cheat.\n\nIf only GitHub had existed back in 1995 the source code may not have been lost. If you’re feeling nostalgic get DOSBox, your old games, and get Demon Hacker.\nThis trip back down memory lane has reminded me of a few things. The Internet, WWW, Google and technology are amazing things. Also that i’m a hacker, and always will be."},"Blog/Design---Little-Things-Matter":{"title":"Design: Little Things Matter","links":[],"tags":["Design","Mobile","Running"],"content":"I like running and listening to music using my iPhone. Up until recently I was using Sennheiser In-Ear Headphones without a remote or microphone. The headphones caused me a few problems before I finally decided to buy new headphones, which made me think about design.\nThe first problem with my current headphones was that even though they were in-ear, they kept falling out, which was really annoying. The second problem was that I couldn’t forward songs. Listening to a slow or uninspiring song approaching a hill is hard work. The third problem sometimes occurred with an incoming message. Fumbling to get the iPhone out of my SPI Belt and read the message while running (to see if it was urgent) was difficult.\nI did a quick review of headphones with remote and microphone in the Apple Store and purchased the Sennheiser OCX 685i In-Ear Sports Headphones.\n\nThe ear clip design, combined with the lightweight cord and clip means that they stay secure while running. No more falling out. The remote and microphone work - I have full control over music. I can also use Siri to listen to incoming messages, and dictate a reply. I can even use Siri to Tweet. The headphones are also sweat and water resistant. Nearly perfect.\n\nThe only problem I have with them is the design of the remote, which detracts from the overall experience of using the product.\n\nCompare the design of the remote on the Sennheiser in the above picture to the remote on the Apple EarPods in the below picture.\n\nCan you guess what the problem is? When I’m running and listening to music, I’m watching the road ahead. I move my fingers to the remote near my neck, grab it, and feel for the controls. They’re all placed together and feel like they blend into each other. It feels like one button. This is the exact opposite experience with the Apple EarPods remote. On the Apple EarPods remote the clear indent in the middle means I feel immediately by touch the distinction between the 3 buttons, and hence how to activate the different functions that the 3 buttons enable.\nI was reading this article today - Tim Cook: The Complete Interview, and there are a few really good quotes from Tim Cook that I think are relevant.\n\nWe’re a product company, and so the products show the values of a company. They speak to innovation. They speak to caring about every detail. They’re a reminder of how incredibly important experience is … every detail has been thought through. The experience is an “Aha” moment.\n\nAnd then this one.\n\nNobody worries about buttons and finishes. Nobody really worries about the experience, and we do. We’re really proud that we do.\n\nDesign is important, and only going to become more so - The 3 Future Waves In Design, And How To Ride Them."},"Blog/Fail-Meaningfully":{"title":"Fail Meaningfully","links":[],"tags":["Apps","Dev"],"content":"It was August 2010. Over 2 years ago. My beautiful daughter Abigail was 2 years old. The iPhone 4 had just come out, and the smartphone revolution was in full swing. All I needed was an idea. Somehow I found myself become part of a like minded, passionate and committed team, with some of the best people I have ever had the privilege or pleasure to work with. I say somehow because I’ve always tried to go with the flow. It just happened. Redistore was born.\n\nThe idea and vision was simple. Wouldn’t it be cool if you could order and pay for your coffee before you arrived at the store, just waltz in, bypass the queue, pick it up and go. It’s paid for so there’s no fumbling around for change, or paying with a card which was time consuming before contactless payment, e.g. MasterCard PayPass. I thought the idea had potential. The team thought the idea had potential. People we talked to thought the idea had potential. We decided as a team to take a risk. ‘If you build it, he will come’, we all heard the voice whisper. Others were skeptical, but not us. We built it.\n2 years later, and Redistore has failed. This is what I learnt.\nReality\nI can still remember how it started. The excitement of exploring the idea. Formulating it. Talking about it. Becoming a team. It felt awesome. That’s the Hollywood beginning.\nThe reality was a hard slog of trying to work two jobs. 15 to 16 hour days, 5 to 6 days a week. Rise at 6am, cycle to work and be working by 7am. Leave at 4pm. Be home and sorted by 5pm. Two hours to spend with my family, which I’m guilty of not doing enough of. At work by 7pm. Work till 9pm or 10pm. Rinse and repeat. And don’t forget the weekends. You get the picture. I had no life.\nTech\nBut we built something that’s bloody cool and has possibility. A fully customisable, real time online ordering system for low value, high volume consumables. Coffee stores. Take away food. The order is paid for by the customer using their Redistore account which they can ‘top up’ using PayPal or a Credit Card. The store gets a verified order. It’s in real time. There’s no queueing. Win win.\nThe technology and platform that we built was the fun part.\nThe customer web client was built using Sencha ExtJS 3 and supports all major browsers. It was designed and built from scratch to provide a fast UX (User Experience) for browsing stores and ordering, unlike most classic page request and response web stores. ExtJS is an amazing platform, but has a steep learning curve, and ExtJS 4 broke compatibility for ExtJS 3 apps; there is significant work required to upgrade your app.\n\n\n\nThe now defunct customer mobile client was built using Sencha Touch 1. The native vs. web app mobile holy war was raging, and we decided to build a web app. It was a mistake. The mobile client worked adequately on iOS, but on Android it was unusable. The tools were not ready. Facebook had not yet admitted their mistake, nor Sencha fired their Fastbook return. We needed a great customer UX, and didn’t have it.\n\nThe store receiver client was also built with Sencha Touch, and performs adequately for stores on an iPod.\nThe web clients communicate via Ajax to the back end action style JSON based web services developed using .NET WCF. If building using the same core technology now, we’d seriously look at Web API and RESTful services. There’s also a ton of awesome back-end enterprise system type stuff (database, reconciliation, reporting, MI etc.), that was built by a Cylon. Seriously. They work hard, I guess because they don’t need to sleep.\nTo address the great customer mobile UX, after go-live we spent 3 months building a native iPhone app, and 3 months building a native Android app. It was a great learning experience at the cost of 6 months of effort. Without getting into details of our approach, or religious debates, I hope that we (the industry) can move forward to the web. How we do that is for smart people to work out.\nGo Live\nWe went live on Friday 1st April 2011 (oh the irony) after 8 months of intense development. There were teething problems as with any new production system, and we worked through them to get it to a stable state.\nWe tried to sell it mostly to coffee stores the old fashioned way, by approaching them, talking to them about it, showing them what it could do. Once we had a store on board we did really simple customer advertising at the store.\nAlthough it’s far from being a runaway success, it has and continues to be successful, in that it ticks along and is used every single business day, with no issues.\nOver 18 months in production, what are the stats?\n\n250 accounts. 43 active in November 2012. 68 with a balance &gt; $5.\n5 stores. 2 active.\n4,712 orders (multiple items per order). 63% using web. 36% using mobile.\n1,900 top ups (min $5 per top up).\n\nThe order percentages between web and mobile are interesting. The 2 active stores are located in office buildings, and it implies customers prefer using the web client to order from their desks, before going down to pickup their order.\nReflection\nThe enthusiasm and commitment for the idea and vision has dispersed. What it could have been didn’t materialise, and not by lack of effort.\nI don’t think we really understood our customer, as we really just replaced phone orders. We didn’t have an automated store onboarding process, so bringing stores on was a long complicated process. We didn’t do marketing.\nWe took a gamble, and it didn’t pay off. We failed.\nEnd\nIt’s time to move on. To take what I’ve learnt and move forward. I’m excited about seeking new ideas and projects. Exploring. Finding. Trying. I love the process of creating things. I’ve heard the expression ‘fail fast’, but I think you should ‘fail meaningfully’ at something you choose, have passion\nfor, believe in, and work hard at. Learning takes quality time.\nIt’s time to move on … after I finish reading The Lean Startup by Eric Ries.\nUpdate: September 22, 2013\nPayPal released their updated app for iOS, version 5.0.1 on September 5, 2013.\nIt’s shown below next to Redistore for iOS, which introduced store distance features in version 1.3 released on April 23, 2012. Looks like there is some similarity.\n\n"},"Blog/Flow":{"title":"Flow","links":[],"tags":["Life"],"content":"Theory\nI’ve just started one of my 2016 challenges, which is to read one interesting book a month. An achievable goal for a slow reader with a busy life. I like to absorb, think about, and, more importantly, enjoy what I’m reading.\nMy book for February (January was my holiday month) was originally published in 1990. Flow: The Psychology of Happiness by Mihaly Csikszentmihalyi (good luck pronouncing that) is “The Classic Work on How to Achieve Happiness”.\nChapter 2 “The Anatomy of Consciousness” talks about how we are at a time in history where the ability to control oneself is not held in high esteem. This is unlike previous periods in history when certain cultures did not accept people as members of the community unless they could master their thoughts and feelings. The chapter describes with great insight what consciousness is, and how it works.\nPractice\nI deliberately chose my first book to complement another 2016 challenge - learn how to meditate. I’ve been using a simple app called “buddhify”, which you can think of as “mindfulness for the digital generation”. With the app on my iPhone, I play short (5 to 10 minutes) guided targeted meditations in the morning when traveling to work, during the day, and at night before going to sleep.\nThe app has a beautiful user interface for selecting which meditation you would like to play and even subtly suggests which type you should use based on the time of the day.\n\nThere are also stats, but I haven’t felt the need to look at them during the week for motivation. I do think it’s interesting reflecting that consistently doing short meditations each day really adds up by the end of the week. This week I spent 1.4 hours meditating. I can feel the effect of a short meditation on my mind and body, so it will be interesting to see the cumulative long-term impact.\n\nCheck it out - buddhify.com."},"Blog/Glitch-in-the-Matrix":{"title":"Glitch in the Matrix","links":["Blog/Running"],"tags":["Story","Running"],"content":"He sprinted, his powerful legs heaving with the strain of propelling his massive 6 foot 3 inch frame forward. His lungs sucked in as much air as they could in the short span they were allowed. They were gaining on him. Two distinct shapes in the distance. 17.2 meters and closing.\nAs he glanced back a few moments before he could just make out their features with the ambient lighting from the houses and dim street lights. Their faces were wolf like, but sinister, hideously contorted. They were howling, but only he could hear it. Long ethereal tormented howls filled his night. His v-band augmented reality display identified them as level 6 ghosts. They were there, but not really there. The two runners were also wearing v-bands, and running in another part of the world. They were chosen by v-net as competitors and spawned on his run.\nHe chuckled to himself, as to them he appeared as Astro Boy. These young kids had no originality, thinking they could psych older runners. But this was serious. If he let them gain ground he risked his level 7 standing in the league.\n‘Show my last ghost’ he said out loud while running, seemingly to himself. His previous self spawned in front of him, running his previous run. He could see he was slacking off and the two wolf like ghosts were gaining. He forced his legs to increase his pace, and sucked in more oxygen. He started gaining on his past ghost and pulling away from his pursuers.\nSuddenly his vision went black, and then it was back, but instead of the familiar scene in front of him he saw trees densely packed together. He was in a forest. The scene was moving fast, bouncing up and down, left and right. He kept running straight along the path he was on, but couldn’t see where he was going. His v-band was showing him someone from somewhere else. What the frak was happening!\nAll this happened in seconds, so he kept running, confused, and expecting that the v-band would correct itself. The scene from his v-band lurched as if the person fell, and then was facing up looking at the trees and dark sky. The vision started to darken, but before it went completely dark he saw what looked like a primitive hunter standing over him. He looked big, muscly, but with short arms, and was carrying a large spear.\nRunning"},"Blog/JESUS-WILL-BE-KING-ON-EARTH":{"title":"JESUS WILL BE KING ON EARTH","links":[],"tags":["Running","Story"],"content":"Just passed the Christadelphian Meeting Hall on my nightly run.\nJESUS WILL BE KING ON EARTH.\nI glanced left and saw what appeared to be a dwarf from The Lord of the Rings … running. Full length braided hair to his legs. Full beard. Black t-shirt and jeans. Huge biceps. All that was missing was a battle axe and shield.\nI swear I haven’t been drinking.\n"},"Blog/Jarvis-API":{"title":"Jarvis API","links":[],"tags":["Life","Dev"],"content":"Happy New Year! It’s 2023! 🎉\nI created an AWS serverless API that I called “Jarvis” over the Xmas break in 2021 to learn a few new things - AWS CDK is awesome!\nI have Apple Home Automations setup that send it events. For example, when my Philips Hue outdoor sensor in my driveway detects motion, it calls the Jarvis API and registers an event.\nSince Dec 2021 my Jarvis API has recorded over 200,000 events. It costs me about $0.10 AUD to run in AWS per month … super expensive.\nMy next task is to play around with the event data that has and continues to be generated, perhaps with streaming + smart notifications? visualisations? insight?\nIf you’re interested and want to run your own Jarvis API, I’ve open sourced the code here - jarvis-api\n"},"Blog/Legacy":{"title":"Legacy","links":[],"tags":["Work"],"content":"Sam Newman started it again. Not the controversial one. The one who wrote the book on Microservices, literally.\n\n”I think I first heard the term ‘heritage’ from @peterboni, but I could be totally wrong…”, Sam Newman - Tweet\n\nI’ve had a problem with a few words the IT industry chooses to use for a while now. Legacy is one of them. The other one is resource, but that’s a post for another time, after a quick tweet.\n\n”My other quest is to replace ‘resource’ with ‘people’ in our vocabulary. Resource is an inanimate not special object you can create and destroy. Do not like it used in relation to tech people.”, Peter Boni - Tweet\n\nOk, back to this post. People in the IT industry often refer to older business systems as ‘legacy’, usually in the following situations:\n\n\nIt’s become diffucult or expensive to find people who have the skills for, or that even want to work on it, or it’s inherited by new people.\n\n\nIt’s technology architecture or components are no longer fit for purpose.\n\n\nOf course, it’s never because the new technology is Shiny.\nGiven how fast the IT industry is changing, in the above situations, legacy is often said with a certain mindset, and a level of disgust, or disdain. It carries a certain stigma, despite the fact that the business was probably built upon, and is now heavily reliant on the legacy business systems. It’s adding value.\nI started using a new word a while ago to refer to older business systems. Like Sam Newman, I’m not sure where I heard or read it, but it stuck in my mind. It matters because words have meaning and power. I didn’t want to refer to business systems that I helped build over many years with disgust or disdain, or more importantly for other people to hear that in what I was saying.\nThe word I started using is heritage. To me, it implies that an older business system is valued and that it should be cared for by being improved, incrementally over time, while continuing to add value.\nSure, there will come a time when it’s not appropriate or even feasible to continue to do this, and then it’s important to understand and agree not only the reasons for replacing it but the investment required to do so."},"Blog/Mobile-Design-Details---Hide-Show-Passwords":{"title":"Mobile Design Details: Hide/Show Passwords","links":[],"tags":["Design","Dev","Mobile"],"content":"I read a tweet from Luke Wroblewski this morning, which lead to a blog post he published on November 7, 2012 called Mobile Design Details: Hide/Show Passwords.\nThe fact that I have to manually enter passwords on mobile has been a constant source of frustration for me, with this only making it worse. Sadly his advice has not caught on much with app/site designers and developers. I decided to see how hard it was to quickly implement on iOS with a few thoughts along the way.\nImplementation\nIt turns out it’s very simple.\nUsing Xcode 5.0.2, do File - New - Project - Application: Single View Application.\nAdd a Text Field to the single View Controller in Main.storyboard. You can add Placeholder text to give the user a visual indication of what they should be doing with the field.\nCreate an Outlet Connection in ViewController.h called password, which should look like this.\n \n@interface ViewController : UIViewController\n \n@property (weak, nonatomic) IBOutlet UITextField *password;\n \n@end\nIn ViewController.m, put the following code into viewDidLoad.\n \n- (void)viewDidLoad\n{\n  [super viewDidLoad];\n \n  CGSize hideShowSize = [@&quot;SHOWX&quot; sizeWithAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:14.0f]}];\n  UIButton *hideShow = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, hideShowSize.width, self.password.frame.size.height)];\n  [hideShow.titleLabel setFont:[UIFont systemFontOfSize:14.0f]];\n  [hideShow setTitle:@&quot;HIDE&quot; forState:UIControlStateNormal];\n  [hideShow setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];\n  self.password.rightView = hideShow;\n  self.password.rightViewMode = UITextFieldViewModeAlways;\n  [hideShow addTarget:self action:@selector(hideShow:) forControlEvents:UIControlEventTouchUpInside];\n}\nAnd then create hideShow.\n \n- (void)hideShow:(id)sender\n{\n    UIButton *hideShow = (UIButton *)self.password.rightView;\n    if (!self.password.secureTextEntry)\n    {\n        self.password.secureTextEntry = YES;\n        [hideShow setTitle:@&quot;SHOW&quot; forState:UIControlStateNormal];\n    }\n    else\n    {\n        self.password.secureTextEntry = NO;\n        [hideShow setTitle:@&quot;HIDE&quot; forState:UIControlStateNormal];\n    }\n    [self.password becomeFirstResponder];\n}\nYou should get something like this.\n\nYou can immediately touch and start entering your un-obfuscated password.\n\nIf you touch ‘HIDE’ then your password is obfuscated, and similarly touching ‘SHOW’ will go back to your un-obfuscated password.\n\nThoughts\nIt’s important to remember that we’re simply toggling the iOS UITextField ‘Secure’ functionality, so when the UITextField is not secure, the user can copy the contents of the UITextField.\nTherefore you should only use this pattern in Sign Up and Login views, not views where you can view/edit account details for a service.\n\n\nThis still doesn’t remove the frustration of having to manually enter passwords on mobile. It would be great to see Apple take the lead with iOS, and extend the iCloud Keychain / Safari Password AutoFill (and generator) features to native apps."},"Blog/People-Based-Working":{"title":"People Based Working","links":[],"tags":["Work"],"content":"Some companies have traditional work environments. When you come into work, you have an assigned desk. You are physically located with your team, which is located within that teams larger team, and so on. The company feels like it physically revolves around you. You are physically partitioned and packed into a master seating plan, maintained and controlled by The Collective of Master Seating Plan Controllers.\nThere’s an obvious and defined order to it all. You know where you sit. You know your place, because its there, day after day. It doesn’t move, even though your work and the people who you work with does. You are the master of your own domain. It contains your stuff, your possessions. It has your personal touch. Outside battles and war rage, but inside your domain its peaceful. You have focus because of consistency.\nSome companies have non traditional work environments. One style is ABW - Activity Based Working. When you come into work, you don’t have an assigned desk. You have a locker like you did in school that contains your work tools and minimal possessions. Your first task for the day is to find a desk. This is more complicated than it sounds. What time did you get in? What activity are you doing today?\nTeams migrate in packs. One lone wolf can disrupt the established base of a team, and set them on a random migration path, which in turn has a ripple effect in the office ecosystem across a floor, and into other floors. Overt (mostly silent) psychological wars are fought over areas by teams posturing, and positioning of physical objects like whiteboards, agile card walls, posters, or pictures. Some teams are firmly entrenched, and won’t be moved, even by the occasional interloper.\nOnce you select a desk, if you don’t immediately clean it, you’re touching potentially multiple people’s germs all over the desk, keyboard, mouse and phone, and then yourself - your face, your food, and other people. This all takes time that’s not spent working, which can be frustrating. Sometimes you think “I sat here yesterday. Maybe I don’t need to clean everything today.” As you sit there in this foreign, sparse, sterile, non personal environment, the people around you may or may not be different from yesterday. It depends what the people who come in after you do. Where will they go when they come in? What complex logic (or not for that matter) will they follow to select their desk?\nThe environment is mostly not peaceful, or conducive to solitary productive thinking work. There’s more noise. People are more chatty. It’s harder to concentrate for lengthy periods at a time, even in so called designated quiet work styled areas. It’s exhausting.\nTo an outsider ABW may appear as chaos. But to an insider, strange things happen in ABW. You can sit next to people you are working with and collaborate with them more effectively. You can sit next to different people. You can move if you don’t want to sit next to someone. You can have random conversations that may, or may not prove immediately useful. The amazing thing is that you can do these things every day.\nIf you want to move to your activity there is no lengthy process through The Collective of Master Seating Plan Controllers. You just … move. You feel like you are part of something bigger than just your small team. You feel more empowered. You seem to physically revolve around the company with people, and the company and the people feel like the core purpose of why you are there.\nYou learn to live with the noise, the constant interruptions, and not owning a space. The space serves a purpose, not just you. You begin to see patterns of movement and highly productive collaboration. You start to participate and change your style of working. You begin to think that you can’t go back to a traditional work environment.\nSimon Sinek: If You Don’t Understand People, You Don’t Understand Business"},"Blog/People-over-resources":{"title":"People over resources","links":[],"tags":["Work"],"content":"Resources\nI’ve had a problem with a few words the IT industry chooses to use for a while now. Legacy is one of them. The other one is resource. This is that post. The one I’ve been putting off writing.\nNathan Jones shared my article about the word legacy on LinkedIn at the time with the following comment.\n\n“Nice reminder from Peter Boni about the language we use in IT. These ‘heritage’ systems exist, because they have kept the business, in business. I personally look forward to the post on resources.”\n\nSam Newman’s tweet gave me the motivation to write the article, but I’ve really had much more of a problem with the word resource than legacy. At the time I left a somewhat jovial, but mostly sarcastic reply on Nathan’s share of my article. It captures my frustration with peoples continued use of the word resource in any context when referring to people.\n\n“I need to raise an ‘article writer’ resource request and get it through prioritisation first. I may not even be the resource allocated to write it 🤔”\n\nWhy It’s Important\nI’m not going to show you definitions of the word resource, or talk about its history. I’m not going to intellectualise it, because my problem with the word resource is emotional.\nWhen people use the word resource, resources, or resourcing, they are anonymising, de-identifying, or generalising people, and hence each person.\nThey are not thinking about a person. They are not thinking about a person’s current skills - soft or technical, or their experience. They are not thinking about a person’s personal or professional development plan.\nThey are not thinking about building high performing teams of people. They are not thinking about the culture of an organisation of people.\nThink for a moment how you would feel if you heard a senior leader refer to you as an ‘x resource’, and that ‘we need two more x resources on project y’.\nGiven that I’ve heard the term mostly from people with project management experience, maybe there’s something in the Manifesto for Agile Software Development about resources?\nAgile Manifesto\nDo you know the first value (of four) of the Agile Manifesto?\n\n“Resources and interactions over processes and tools” - Manifesto for Agile Software Development\n\nHow stupid does that look and sound? Back in our universe, the first value actually says.\n\n“Individuals and interactions over processes and tools” - Manifesto for Agile Software Development\n\nThe Agile Manifesto says individuals and their interactions, not resources and their interactions - that’s where you should read Sam Newman’s book on Microservices and how they should interact. A service is a resource. A person is not a resource.\nPrime Value\nI’m proposing a prime value. That means it’s “of first importance; main”. It’s really simple.\n\n“People over resources”\n\nAnd then remember this.\n\n”That is, while there is value in the items on the right, we value the items on the left more.”\n\nAlways think about people first, before you think about resources. You will change the words you choose to use when referring to people, and influence other people’s thoughts and actions."},"Blog/PhotoArchive-1.3":{"title":"PhotoArchive 1.3","links":[],"tags":["Apps","Mobile"],"content":"PhotoArchive version 1.3 is now available. With version 1.3 you can now easily archive to your home storage and your cloud (Google Drive) storage.\nGoogle recently lowered the price of their monthly storage plans making it extremely cheap to have an active (not cold like Amazon S3 Glacier Storage) offsite backup of your irreplaceable memories, your photos &amp; videos.\n\n  \n"},"Blog/PhotoArchive-for-iPhone":{"title":"PhotoArchive for iPhone","links":[],"tags":["Apps","Design","Dev","Mobile"],"content":"I take a lot of photos &amp; videos with my iPhone. It’s always with me, so it’s convenient, and the quality is good. My DSLR body and lenses produce superior quality, but are usually left at home gathering dust.\nWhen I take new photos or videos, often of my family, I worry that if something were to happen to my iPhone, those irreplaceable memories will be lost forever.\nThere are many solutions for this need, for example iCloud Backup, the Dropbox app, or the Amazon Cloud Drive app, but they all have varying costs and limitations. I wanted a simple solution for me, and that’s why I decided to build an app as a side project - PhotoArchive for iPhone. When released, PhotoArchive will be free for everyone on the App Store.\nWhat it looks like\n\n\nWhat it does\nI have a Western Digital My Book NAS (Network Attached Storage) at home that is always on. I use it for file storage for computers on the network, and DLNA streaming to the living room TV via the PS3.\nI copy new photos &amp; videos from my and my wife’s iPhones by manually connecting them to a computer via USB, and downloading the new ones. Because it’s a tedious manual process I don’t do it as often as I should.\nWhat PhotoArchive does is copy new photos &amp; videos from your iOS device to an FTP server, over Wi-Fi. The Western Digital My Book NAS, like most NAS, supports FTP (File Transfer Protocol).\nThis means that when I get home I can effortlessly back up new photos &amp; videos I’ve taken that day - no turning on computers, no USB cables etc.\nWhat it does (marketing version)\nWhat does PhotoArchive do?\n\nPhotoArchive saves your irreplaceable memories, your photos &amp; videos from your iPhone, iPad, or iPod touch to your home storage over Wi-Fi.\n\n\n\nSave Time - Stop manually backing up your device to iTunes. Are you still using a USB cable? Stop manually backing up your photos &amp; videos by importing them into iPhoto. You may still import them into iPhoto, but you can do it when you have time, not when you have to - your photos &amp; videos are already safe!\n\n\nSave Money - Use iCloud Backup to back up everything except your Camera Roll, so there is no need to manually back up your device to iTunes. Turn off the Camera Roll from iCloud Backup, and stay under the 5.0 GB free limit.\n\n\nArchives - Does not synchronise. Will not download photos or videos from your home storage to your device.\n\n\nNever Deletes - Will never delete a photo or video from your home storage, or from your device.\n\n\nSmart Archive - Remembers the previous archive, and will only upload new photos &amp; videos, so it’s FAST!\n\n\nSmart Photo View - Shows you your photos &amp; videos that are in danger of being lost forever (not archived), and the ones that are safe in the event that something happens to your device (archived).\n\n\nFull Resolution and Metadata - Uploads your photos &amp; videos in their full resolution, with all metadata - information about your photos &amp; videos, e.g. where you took them.\n\n\nHow does PhotoArchive work?\nPhotoArchive archives to your home storage - NAS (Network Attached Storage) or Mac/PC, using FTP (File Transfer Protocol). Most NAS devices already support FTP, but if you are using a Mac/PC you will need an FTP server.\nFTP should only be used on Wi-Fi with WPA2 security, with your storage on the same network. Don’t do it over the Internet! Be security smart.\nDesign thinking\nThe main view that greets the user visually shows them all photos &amp; videos on their iOS device, grouped into state - not archived, or archived. It first shows photos &amp; videos that are not archived (in danger of being lost forever), and then photos &amp; videos that are archived (safe).\nThe user can either setup their archive destination, or start archiving if already setup and there are new photos or videos.\nI took inspiration from the iOS Photos app, and show photos &amp; videos as varying square sizes.\nThe Not Archived section photos &amp; videos are shown as large squares up to a certain number, and then get smaller. Large squares let you see the few photos &amp; videos that you haven’t archived up close. If there’s lots, then they are shown as small squares to give you a visual sense of how many there are. The section header is the PhotoArchive logo on red - danger!\nThe Archived section shows photos &amp; videos as small squares; they are safe, so you don’t need to see what they are, just get a visual sense of how many there are. The section header is the PhotoArchive logo on blue (this is the app icon) - safe.\nThe design allows both sections to appear together on the main view without much scrolling required.\nWhen will it be released\nPhotoArchive is functionally complete. I’m currently cleaning, polishing and testing it. It would be great to have a few testers, so if you’d like to test it out and are willing to provide feedback, then contact me.\nThe future\nSince the purpose of PhotoArchive is to save your irreplaceable memories, i’ve thought about adding support for offsite archiving to cloud storage such as Amazon S3 or Glacier.\nAmazon Glacier is attractive because of it’s extreme lost cost - USD$0.01 per GB (gigabyte) per month. That’s just over USD$10 per month to archive 1TB (terabyte) of photos &amp; videos!"},"Blog/Roblox":{"title":"Roblox","links":[],"tags":["Life","Dev"],"content":"Want to teach your kids the basics of software development?\nRoblox!\nIn under 2 hours I helped my daughter create an “obby” (obstacle) game in Roblox with disappearing objects by writing code in Lua.\nShe also published it to Roblox for my son to play on his iPad!\nI’m blown away what the next generation of tech will enable young people to create.\nLong way from my first exposure to software development using GW-BASIC on an Amstrad PC1512.\n"},"Blog/Running-Conversation":{"title":"Running Conversation","links":[],"tags":["Life","Running"],"content":"I was out running early this morning, and RunKeeper had just finished coldly relating the\nfacts of my run performance so far. I wasn’t doing great, but in my defence I was sore from the full-body workout the day before.\nI don’t wear a watch, and I wanted to know what time it was.\nThe music was playing.\n(press+hold button)\n“What’s the time?&quot;\n&quot;It’s 6:20 am, much too early!”\nI laughed, and then thought…\n(press+hold button)\n“What’s on my schedule for this morning?&quot;\n&quot;You have an appointment at 10:00am. Would you like to hear more about it?”\n“Sure”\n“At 10 am, Liam Swimming Lessons, at *** Swimming Pool”\nCool, I had forgot about that.\n(press button)\nThe music resumed.\nWhat’s next? conversing with your car?\nWe’re living in the future."},"Blog/Running-Memory":{"title":"Running Memory","links":["assets/2013-07-25-running-memory/photo.jpg","Blog/Glitch-in-the-Matrix"],"tags":["Story","Running"],"content":"Liam ran, his long muscular legs pounding the pavement. There were only a few souls out that chose to brave the cold and darkness of the early morning. His breathing and rhythm were steady. He wasn’t pushing himself as he settled into his run. He ran to relax and be with his thoughts.\n”Show dad running” he said softly to himself between breaths. Ahead of him on the long bridge his dad appeared running. He smiled to himself. The music he was listening to changed to a different track. “Sweet Dreams, Ministry of Sound Running Trax Winter 2011” appeared at the top of his vision, next to more text … “Pace 5:27/km, 20sec slower/km”. Memories of his childhood came flooding back of them running together at the park near their home, him desperately trying to keep up with his shorter legs. Better catch the old man now he thought, I’m slacking off! He gained on his dad and was finally running in sync with him, side by side.\nThe nanotechnology in his body connected him to the vast services and data available on the net and seamlessly augmented his reality, which in this case was his vision and hearing. His dad had been born into a time when the world was starting to emerge from their pre-digital caves, and people started leaving digital footprints everywhere they went. He was benefiting from his dads digital footprint now. His dad loved to run, and had recorded them for his own benefit using the primitive tracking technology and services of the time.\nThis was the first time Liam had been to this city. His dad had been here before and run this same route. As he ran side by side with his dad, listening to the same music he had listened to many years before he felt connected to him, in a way that would not have been possible for his dad’s generation. This was his dad, in his prime, doing something that he now loved too, and they were doing it together at different places in time.\nAs he stopped at the end of the road and looked out over the water, the sight of the Sydney Opera House greeted him. They both stood there, looking at the Opera House, and the Harbour Bridge to the right. He turned his head and looked at the avatar of his dad, and smiled.\n\nPhoto (Original)\nGlitch in the Matrix"},"Blog/Running-Numbers":{"title":"Running Numbers","links":["Blog/Running"],"tags":["Life","Running"],"content":"In January 2013 I wanted to try something different, and decided to try running as I had never been a runner. In February I wrote a short story called Running, and then went on to write a few more blog posts during the year related to running.\nWhile I was doing all this writing, I ran a total of 529.3 kilometers, for 53 hours, and burned 51,578 calories, which is about 25 days worth of food for an adult (based on 2,000 calories a day).\nAt the beginning of the year I could barely run 2.5 kilometers, in 6 minutes, 42 seconds per kilometer.\nBy the end of the year I had run in the City to Surf 12 kilometers (I finished in 1 hour, 14 minutes, 1 second), and finished the year strong with an arbitrary goal - run 5 kilometers every day for 5 days. I had also run 2.8 kilometers in 4 minutes, 39 seconds per kilometer.\nI also lost 12.8 kilograms.\nThis year I plan to train and run in the City to Surf Half Marathon, which according to Google is 21.097494 kilometers. Very precise, thanks Google.\nAs I look back at last year it’s the experience of running (and writing about it) that I loved, and it’s why I kept doing it. It’s not about the numbers."},"Blog/Running":{"title":"Running","links":[],"tags":["Story","Running"],"content":"He was running. Hard. He knew instinctively to the very fibre of his being why he was running. Survival. His life. If he didn’t run, and run fast, he was dead.\nThey were after him, howling for blood, and a more primal drive, the thrill of the hunt, and the kill. He was the prey.\nHis hunters were larger than him, bigger boned, with barrel chests, shorter arms and legs, but more powerful. They carried more primitive heavy stabbing spears compared to his more versatile throwing spear, which meant they needed to get close to him.\nHe knew they were getting closer. The sounds of their heavy footfalls rang through the dense forest. Their garbled grunts and taunts echoed all around him, their purpose to intimidate, to frighten, but they caused the opposite reaction, it triggered his survival instinct. He ran faster.\nSuddenly he tripped over a branch, and fell hard hitting his head on a rock. As his vision darkened, he felt like he was being thrown through something strange. And then there was total darkness. An enveloped feeling. No sound. No predators. And then, again, strangely, but differently …\nHe was running. Steadily. Consistently. Really concentrating on his breathing, his stride, the way his feet hit the ground, and his overall rhythm. He was running for fitness, competing against imagined binary ghosts, some of other souls - thousands of them scattered around the planet, but also some of himself at different places in time, but in his mind mostly against ones from the past.\nHis mind created the purpose and the urgency for his running. The small computing device attached to his body was capable of storing and processing massive amounts of data. While he ran it was working to pump high beats per minute music to his ears which when combined with his brain increased his heart rate and blood flow.\nThe small computing device was also working to receive signals being broadcast from an array of satellites orbiting the planet, to triangulate his exact location on the planet every second. It then sent this information back into the airwaves, to be captured by a vast array of computing devices and software, which then stored and analysed the information, and sent back statistics and insights that he could analyse, share, and interact with later.\nHe looked ahead as he ran at the scenery slowly bobbing up and down, up and down. He pulled more air into his lungs. This was different. Strange. Somewhat lonely, but not. He couldn’t figure out why, but it felt good to run."},"Blog/This-Is-Water":{"title":"This Is Water","links":[],"tags":["Life"],"content":"I recently took a month leave from work and did absolutely nothing. Well not nothing. I did something I’ve never done before. I didn’t do any work. I spent it with my family. I relaxed. Really relaxed. I disconnected from my life of work, more work, the Internet, computers and technology. Well, ok, mostly for the last few. This may not seem momentous to you, but for me it was.\nThe last major break I had was when my son Liam was born. My idea then of relaxing in between all the crying and sleepless nights was to learn the Android platform by creating an App. The App was released August 2011. Now with an average rating of 3.8 out of 5 and over 80,000 installs it has been successful, even if I wasn’t successful at relaxing.\nWhen I returned to work I felt strange. The first few days I was wondering why I was there. What was I doing. What was my purpose. Why did I come here (other than the obvious reasons). I’d look out the window and feel in my soul that I needed to return to the existence I had come from. I missed my pain in the butt kids. There was the usual jokes with family and friends. “Hey, how’s reality? Happy to be back at work? ;)”, to which I replied jokingly “Reality sucks!“.\nWhat I started to notice in the first few days was that I was relaxed at my core. I could think before speaking and putting words out there, making sure they were positive and added value. It sharpened my focus. I no longer felt like a speeding train. I felt like I’d slowed down inside, and was more effective for it.\nA few more days passed, and it was the end of the first week. The feeling of strangeness was still there, but so too was the feeling of being relaxed at my core. I resolved to fight like hell to keep it. I started to change my habits. I made time for breakfast in the morning. I resolved not to rush. I made time for exercise; riding, running, walking and started weights again after many years. I made time for my family. I made time for meditation. I’ve made time for thinking, writing and doing. There’s only so many hours in a day, so I stopped doing things that didn’t add value, and just added noise to my life. It’s a liberating feeling.\nIt’s affected me in other ways too. I had one of my best runs in my first week back at work. Relaxed. Smooth. Good pace and rhythm. But still competitive. I still increased my pace, clawing at the road, gasping for breath for the last couple hundred metres. A neighbour would have seen this person run up the road, collapse on the lawn, gasping for breath, scrambling at his iPhone to press finish on Strava. As I lay there on the lawn, the beats from the earbuds combining with the pounding of my ears, sweat pouring off my face and down my neck, the wind hitting me, I felt alive. I felt great. It’s reflected in my edited Strava Name for the run - “BOOM FEEL MY RYTHM STICK BOUNCE !“.\nThis Is Water"},"Blog/iHealth-Renaissance":{"title":"iHealth Renaissance","links":[],"tags":["Life","Mobile","Running"],"content":"\nI have experienced a personal health renaissance over the last year. My iPhone1 is teaching me how to change my health, both body and mind. It has offered motivation when I needed it. I believe that the iHealth Renaissance is just getting started. It could do the same for you if you let it. Let me explain how.\nIt all started innocently enough on January 1, 2013 when I installed the first health app on my iPhone - RunKeeper, that I had heard about from a friend. I didn’t think I was that unfit as I cycled regularly, and was able to do 80km rides at a decent pace. I wanted to try something different, and decided to try running as I had never been a runner. I actually didn’t like it as I thought that I couldn’t do it - that I wasn’t built for it. I’m 189 cm (6 feet 2.4 inches), and was about 98 kg. Overweight for sure, but at the time not really concerned about it. My first run was the day after, January 2 when I ran 2.55 km at a pace of 6:42 per km, on a completely flat course.\nRunKeeper gave me all sorts of rich feedback. Realtime audio feedback on my run. Visual statistics after my run and of all previous runs. I could easily hear, see and track my progress. The social networking that was built in took the feedback to the next level. Likes and comments on my runs, as well as being able to view friends runs, combined with the leaderboard, gave me more motivation. I was really enjoying running. I wasn’t conscious of why I kept coming back and using RunKeeper until I experienced a talk from Dr Jason Fox (a ‘motivation strategy and design expert’) at a technology conference later in the year.\n\nRunKeeper had designed running to be inherently motivating. It reduced the latency between the effort and feedback. It enhanced the visibility of, and gave me a clear sense of progress. The more visible my progress, the more motivated I became. The more I ran.\n\nAfter RunKeeper came Strava for my cycling. I think RunKeeper supported cycling as a different activity type but I knew friends using Strava for cycling. If you were around and using the Internet in the late 90s you will remember ICQ starting the IM (Instant Messaging) wars. Some friends were on RunKeeper, and some were on Strava. I was stuck with both, which really means three apps, as Strava has two - one for cycling and one for running. All this cardio meant that weights were next. Thoughts of figuring out how to do the exercises properly again, and setting up and recording scheduled routines did not motivate me at all. That’s when a friend put me on to GymGoal 2 which managed it all for me, and gave me visual help and feedback.\nWith 4 fitness apps installed and being used regularly next came changing what I put into my body. My wife installed and started using MyNetDiary which is essentially calorie counting, with once again, plenty of feedback that gave me a sense of progress. I could visually see how many calories I was consuming against how many I should consume to meet my target weight. What it did more than that though was teach me about what I was eating. I was shocked at a few things, for example almonds … holy crap! It hasn’t changed what I eat, as I still enjoy beer and chocolate, but it has changed my behaviour. I now think about the quality and quantity of what I will put into my body.\n\nWith 5 health apps installed and being used regularly I started seeing changes. 8 months of running, and 1.5 months of changing the way I eat I had dropped over 8 kg in weight, and could now comfortably run 5 km at a pace of 5:30 per km, with nice steep hills thrown in.\nThere are two more health apps that I have installed and started using. The first one I came across when I read an article The Scientific 7-Minute Workout. I thought that it would come in handy when I was short on time, and also as a good way to shake things up. Check out the ‘7 Minute Workout “Seven”’ app. The last one I came across when I read a Lifehacker article What Happens to the Brain When You Meditate (And How it Benefits You), that recommended an app created by a former Buddhist monk called Headspace. Check out the app ‘Headspace’, it’s meditation when and where you have the time, which for me is on my way to work on the bus. I’m really excited about giving meditation a go, and Headspace was built for the iHealth Renaissance.\nI now have 7 health apps installed and being used, which is the majority category of apps that I use on my iPhone. I haven’t used a Nike+ Fuelband, Jawbone UP, or a Fitbit Flex, but I can see that the iHealth Renaissance is just starting, and that these are just early wearable accessory products.\nIt’s frustrating that I need multiple apps for the same thing, and also that I need to enter the same information into different apps. For example most of the health apps want to know my gender, age, height and weight, to be able to provide me meaningful feedback. Why do I need to provide my data multiple times?\nIt’s interesting looking at the move Apple has made with the iPhone 5s, by introducing a motion coprocessor called the M7, which continuously measures motion data and makes it available for apps. I can’t wait for the next generation of iHealth apps and wearable accessory products. I think we still need wearable accessory products as apps are tucked away nicely on your iPhone. You choose when to interact with them. We need devices that we can see that constantly motivate us. Devices that further reduce the latency between effort and feedback in an effortless, visual, motivational way. I think that these devices will still be accessory products that augment the core richer connected experience that can be delivered via your iPhone.\nSo the iHealth Renaissance is making good progress, but where is the iWealth Renaissance? The current batch of mobile apps from the financial services industry are primarily sales and service based. Buy this product. View and manage your accounts. They haven’t started to take the next step.\nFootnotes\n\n\nI use an iPhone. I use the term iPhone in this article to mean smartphone, or what I think of as a native Internet mobile personal assistant and augmentation device. ↩\n\n\n"},"Blog/iOS-7-Dynamic-Type":{"title":"iOS 7 Dynamic Type","links":["Blog/iOS-7-UserXListView"],"tags":["Dev","Mobile"],"content":"iOS 7 introduces Dynamic Type, which if apps choose to support it, gives the user control over text size in an app. Web pages have had this feature for free since the early days of the web, but web browsers moved away from dynamic text sizing.\nThe Two Types of Browser Zoom.\niOS7 Dynamic Type automatically adjusts weight, letter spacing, and line height for every font size. It looks *stunning, but there’s work to make your app support it.\nDefault Size\nHere’s what UserXListView looks like with the Text Size (Settings - General - Text Size) set to the default size in the iPhone Retina (3.5-inch) iOS Simulator.\n\nWe get 3 and ‘a bit’ cells in the UITableView.\n\nSmallest Size\nChanging the Text Size to the smallest size means we can fit slightly more.\n\nNearly 4 cells in the UITableView.\n\nLargest Size\nChanging the Text Size to the largest size means we can fit slightly less, but get big\nbeautiful type.\n\n3 cells in the UITableView.\n\nImplementation, The Easy Part\nThat’s how it looks, but how hard is it to make your app support it. Let’s look at [UserXListView][post_UserXListView]. The cell layout makes use of Auto Layout Constraints, which are very powerful.\n\niOS 7 has defined Text Styles - Body, Caption 1, Caption 2, Footnote, Headline 1, Headline 2, Subhead 1, and Subhead 2. We assign a Text Style to each label in the cell layout via the attribute inspector as shown below.\n\nOnce the label Text Styles and Auto Layout Constraints are set, we’re ready for the hard part.\nImplementation, The Hard Part\nUnlike Auto Layout in this example, there’s more work to do to support Dynamic Type.\nWe need to make the Controller aware of a Text Size change by hooking into the UIContentSizeCategoryDidChangeNotification.\n- (void)viewDidLoad {\n  [super viewDidLoad];\n  [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(preferredContentSizeChanged:) name:UIContentSizeCategoryDidChangeNotification object:nil];\n}\n \n- (void)preferredContentSizeChanged:(NSNotification *)aNotification {\n  // adjust the layout of the cells\n  [self.view setNeedsLayout];\n \n  // refresh view...\n}\nWe need to calculate the height of the row/cell based on it’s content, and as each label in the cell can change height we need to calculate the total height of the cell required.\n- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {\n  Account *account = [self.fetchedResultsController objectAtIndexPath:indexPath];\n \n  UIFont *nameLabelFont = [UIFont preferredFontForTextStyle:UIFontTextStyleHeadline1];\n  CGSize nameLabelFontSize = [[account name] sizeWithAttributes:[NSDictionary dictionaryWithObject:nameLabelFont forKey:NSFontAttributeName]];\n \n  // ...\n \n  CGFloat PADDING_OUTER = 10;\n  CGFloat totalHeight = PADDING_OUTER + nameLabelFontSize.height + ... + PADDING_OUTER;\n \n  return totalHeight;\n}\nWe also need to programmatically assign (or re-assign because we already did it in the Storyboard) the cell label Text Style values.\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n  AccountCell *cell = (AccountCell *)[tableView dequeueReusableCellWithIdentifier:@&quot;AccountCell&quot;];\n \n  Account *account = [self.fetchedResultsController objectAtIndexPath:indexPath];\n \n  cell.nameLabel.text = [account name];\n  cell.nameLabel.font = [UIFont preferredFontForTextStyle:UIFontTextStyleHeadline1];\n \n  // ...\n}\nFinal Thoughts\nThat’s it. iOS 7 determines and applies the font attributes for each label based on the Text Style for each label, and the iOS 7 Text Size system setting selected by the user, and it’s left to us (the developer) to cater for the changes in the layout to the view.\nAs you can see there’s a bit of extra work to support Dynamic Type. It would be nice if it was a bit smarter, a bit more automatic, but with great power comes great responsibility."},"Blog/iOS-7-UserXListView":{"title":"iOS 7 UserXListView","links":[],"tags":["Dev","Mobile"],"content":"I believe the best way to understand something is to get your hands dirty, so I decided to build the front end part of an app idea that I’ve had for a while as an iOS 7 app.\nWhile using iOS 7 for the last week or so, I’ve been thinking about the UI and UX. Of course, Metro (design language) has been around for a while thanks to Microsoft, but the Metro apps I’ve used feel dull. iOS 7 feels surprisingly refreshing.\nOne of the views in the app I’m building needs a list of things that the user creates - a typical pattern in many apps. iOS has a UITableViewController, so technically it’s an easy problem to solve. In terms of the design of the UI and UX it’s a little bit more complicated.\nLet me talk you through what I call the UserXListView(tm) pattern in 7 images of the iOS 7 app I’ve started building.\n1. Empty List View\nOk. We have a list view. That + in the top right corner is staring at her. Tap me! Tap me!\n\n2. Add Item (with default Icon and Colour)\nShe taps +. She knows that she’s going to create something. What’s the first decision? What to name it? No. The first decision is an emotional one. What’s this thing going to look like.\n\nTechnically this is a modal segue; either Cancel and go back, or enter the required information and Save.\n3. Item Icon\nShe taps Change Icon. This is where it gets interesting. The icons are in groups and are all black so that they are easy for her to judge equally. In this instance there’s only one group of simple icons from The Noun Project, that are visually related to the thing that she is creating.\n\nOnce again this is a modal segue; either Cancel and go back, or give the required information, which in this instance is selecting an icon. We use a UICollectionViewController that’s dynamic. We define the icon groups and icons as follows.\nicons = [NSArray arrayWithObjects:\n          [NSArray arrayWithObjects:@&quot;The Noun Project&quot;, @&quot;airplane&quot;, @&quot;beachumbrella&quot;, @&quot;bucket&quot;, @&quot;car&quot;, @&quot;cocktail&quot;, @&quot;coins&quot;, @&quot;college&quot;, @&quot;creditcard&quot;, @&quot;house&quot;, @&quot;island&quot;, @&quot;piggybank&quot;, @&quot;rain&quot;, @&quot;ring&quot;, @&quot;sailboat&quot;, @&quot;school&quot;, @&quot;shoppingbag&quot;, @&quot;smartcard&quot;, @&quot;stroller&quot;, @&quot;tree&quot;, @&quot;umbrella&quot;, @&quot;wallet&quot;, nil],\n        nil];\n4. Item Icon Colour\nShe taps the piggy bank icon (they’re cute). Now she can personalise the icon even further by selecting a colour from different groups of colour palettes. She can select a colour from the same palette to match all her things, or mix and match colours from different colour palettes. The choice is hers. If she doesn’t like the icon in any of these colours she can either tap &lt; Icon, or as a nice feature of iOS 7, swipe left to right inside where the icons are located and the view will slide off the top to the right and she will be taken back to the black icons.\n\nThis time we do a push segue. We use a UICollectionViewController that’s dynamic, and some Core Graphics help. In the app we only store one black piggy bank icon .png file, and at runtime dynamically colour each piggy bank. We define the colour groups and colours as follows.\ncolors = [NSArray arrayWithObjects:\n           [NSArray arrayWithObjects:@&quot;Winter Sunset&quot;, @&quot;#A8AB9B&quot;, @&quot;#172A38&quot;, @&quot;#EC4B5D&quot;, @&quot;#F48773&quot;, @&quot;#E0C590&quot;, nil],\n           [NSArray arrayWithObjects:@&quot;Ocean Five&quot;, @&quot;#00A0B0&quot;, @&quot;#6A4A3C&quot;, @&quot;#CC333F&quot;, @&quot;#EB6841&quot;, @&quot;#EDC951&quot;, nil],\n         nil];\nAnd then do some magic with the black piggy bank icon with a helper.\n+ (UIImage *)getIcon:(NSString *)iconName withColor:(NSString *)iconColorHex {\n  UIImage *image = [UIImage imageNamed:[NSString stringWithFormat:@&quot;%@.png&quot;, iconName]];\n \n  CGRect rect = CGRectMake(0, 0, image.size.width, image.size.height);\n  UIGraphicsBeginImageContext(rect.size);\n \n  CGContextRef context = UIGraphicsGetCurrentContext();\n  CGContextClipToMask(context, rect, image.CGImage);\n  CGContextSetFillColorWithColor(context, [[UIColor colorFromHexCode:iconColorHex] CGColor]);\n  CGContextFillRect(context, rect);\n \n  UIImage *img = UIGraphicsGetImageFromCurrentImageContext();\n  UIGraphicsEndImageContext();\n \n  return [UIImage imageWithCGImage:img.CGImage scale:1.0 orientation:UIImageOrientationDownMirrored];\n}\n5. Add Item (with selected Icon and Colour)\nShe taps the red piggy bank in the Ocean Five colour group, and is taken back to the 2. Add Item view, with her red piggy bank there waiting for her. She can now enter the other information and tap Save.\n\n6. Item in List View\nShe taps Save, and her new red piggy bank is waiting for her in the list view. All that’s left to do is to add some more.\n\n7. List View with Items\nAs she looks at the list of her things, she instantly recognises and associates with each one, as it has her personal identifying touch.\n\nAs you can see it’s easy to give the user power over their things by a simple mobile UI and UX pattern, hereby called the UserXListView(tm) pattern.\nStoryboard\nFor reference here’s how the views hang together in the Storyboard. Excluding the UINavigationControlers we have a UITableViewController, UIViewController, and two UICollectionViewControllers.\n\nSources\nMetro (design language)\niOS 7 Design\nIf you use resources, remember to do the right thing and attribute where required!\nThe Noun Project\n\nBeach Umbrella designed by Laurent Patain from The Noun Project\nBucket designed by Anand A Nair from The Noun Project\nCocktail  from The Noun Project\nCoins designed by Jevgeni Striganov from The Noun Project\nCredit Card designed by Brian Oppenlander from The Noun Project\nHouse designed by Olyn LeRoy from The Noun Project\nIsland designed by Athena Manolopoulos from The Noun Project\nRain designed by Scott Lewis from The Noun Project\nRing designed by Christopher T. Howlett from The Noun Project\nSail Boat designed by Laurent Patain from The Noun Project\nShopping Bag designed by Erin Standley from The Noun Project\nSmart Card designed by Andrew Forrester from The Noun Project\nStroller  from The Noun Project\nUmbrella  from The Noun Project\nWallet designed by Hakan Yalcin from The Noun Project\n\nCOLOURlovers"},"Blog/iOS-Formatted-Currency-Input":{"title":"iOS Formatted Currency Input","links":[],"tags":["Dev","Mobile"],"content":"You’re building an iOS app, and need the user to enter a money value. You start by using a UITextField. If you want a basic user experience, then you’re done.\nIf you want to give the user something better, then the pain begins. The pain is worth it because small details matter. I’ve taken ideas from a few places and combined them into this experience and open source code.\nThe Experience in 9 images\n1. We start and sit there, begging the user to enter something. We’re showing $0.00, so we have sent a signal to them that they are entering a money value. The cursor is flashing at them after the last 0 at the end of the formatted money value.\n\n2. The user taps the 1 key on the number pad. The display value changes to $0.01\n\n3. The user taps the 2 key on the number pad. The display value changes to $0.12\n\n4. The user taps the 3 key on the number pad. The display value changes to $1.23\nThey haven’t had to enter in a dot. They are just tapping numbers, and the displayed money value is formatting itself in front of their eyes.\n\n5. The user taps some more numbers - 4, 5, and then 6. The display value changes to $1,234.56\nWe have a comma! The money value is formatted.\n\n6. The user taps Delete. The display value changes to $123.45\n\n7. The user moves the cursor to after 1, taps Delete. The display value changes to $23.45\n\n8. From start the user gets ready to paste in ‘$1,000’ (without quotes) from somewhere else.\n\n9. The “$1,000” gets pasted in and the display value changes to $1,000.00.\nNote that the display value didn’t change to $10.00, which would have happened if we didn’t trap the paste and format the value before updating the display value.\nAlso note that the user could also paste in ‘1000’ or ‘$1000’.\n\nThe Code\nGo get it - FormattedCurrencyInput on GitHub.\nFork it, or submit a Pull Request, and let’s make it better for others together!"},"Wealth/Books":{"title":"Books","links":[],"tags":["Wealth"],"content":"Books pack the biggest bang for your buck containing massive knowledge in a small package.\nCatapult yourself on your journey to sustainable wealth and financial independence.\nBeginner\nLearn by changing your behaviour and gaining experience.\n🇦🇺 The Barefoot Investor\n\nwww.barefootinvestor.com/books\n\n🇦🇺 She’s on the Money\n\nwww.shesonthemoney.com.au/books\n\nIntermediate\nLevel up and understand more about the why.\n🇦🇺 The Ulysses Contract\nHow to never worry about the share market again.\n\namzn.asia/d/cASWVYJ\n\n🇺🇸 The Simple Path to Wealth\nYour Road Map to Financial Independence and a Rich, Free Life.\n\nwww.thesimplepathtowealth.com/\n\n🇺🇸The Psychology of Money\nTimeless lessons on wealth, greed, and happiness.\n\nwww.morganhousel.com/\n\nAdvanced\nBecome the master.\n🇦🇺 Strong Money Australia\nHow to Gain Financial Independence and Create a Life of Freedom.\n\nstrongmoneyaustralia.com/book/\n\n🇦🇺 Motivated Money\nSound Financial Advice for the Post-GFC World.\n\nmotivatedmoney.com.au/product/motivated-money/\n\n🇺🇸 Just Keep Buying\nProven ways to save money and build your wealth.\n\namzn.asia/d/0QbxQJd\n"},"Wealth/Educators":{"title":"Educators","links":[],"tags":["Wealth"],"content":"🇦🇺 Motley Fool Money\nScott Phillips (Motley Fool Australia) and Andrew Page (Strawman - Private Online Investment Club) talk finance, investing, and the economy.\n\n🎙️ podcasts.apple.com/au/podcast/motley-fool-money/id1118867383\n🌏 strawman.com/home\n\n🇦🇺 Rask Australia\nOwen Rask - Investment news, finance and education.\n\n📽️ www.youtube.com/@RaskFinance\n🌏 www.rask.com.au\n\n🇦🇺 The Property Couch\nBryce Holdaway &amp; Ben Kingsley - Australian’s that run Empower Wealth and educate others about property investment.\n\n📽️ www.youtube.com/@ThepropertycouchAustralia\n🎙️ podcasts.apple.com/au/podcast/the-property-couch/id969904333\n🌏 thepropertycouch.com.au/\n\n🇺🇸 Scott Galloway\nProfessor of Marketing at NYU Stern School of Business and host of the Prof G and Pivot Podcasts.\n\n📽️ www.youtube.com/@TheProfGShow\n🎙️ podcasts.apple.com/au/podcast/the-prof-g-pod-with-scott-galloway/id1498802610\n🌏 www.profgalloway.com\n\n🇺🇸 Steven Bartlett\nThe Diary Of A CEO.\n\n📽️ www.youtube.com/@TheDiaryOfACEO\n🎙️ podcasts.apple.com/au/podcast/the-diary-of-a-ceo-with-steven-bartlett/id1291423644\n"},"Wealth/Resources":{"title":"Resources","links":[],"tags":["Wealth"],"content":"🇦🇺 Passive Investing Australia\nEli - Australian curating an invaluable passive investing how-to reference.\n\n🌏 passiveinvestingaustralia.com/\n\n🇦🇺 Pay calculator\nEasily estimate every aspect of your pay and test scenarios, e.g., salary sacrifice Superannuation. The calculator conforms to the Australian Tax Office rates and formulas.\n\n🌏 paycalculator.com.au\n\n🇦🇺 RBA Cash Rate and Inflation Targets\nReserve Bank of Australia.\n\n🌏 www.rba.gov.au/statistics/cash-rate/\n🌏 www.rba.gov.au/inflation/inflation-target.html\n\n🇦🇺 Vanguard Index Chart\nIt’s the long-term story that really counts.\n\n🌏 www.vanguard.com.au/adviser/tools/index-chart\n\n🇦🇺 SPIVA Data Australia\nPercentage of Australian Equity General funds that underperformed the S&amp;P/ASX 200.\n\n🌏 www.spglobal.com/spdji/en/research-insights/spiva/#australia\n"},"Wealth/Semper-FI":{"title":"Semper FI","links":[],"tags":["Wealth"],"content":"The 3 rules in life for building sustainable wealth while on your journey to being financially independent are as follows.\n\nEarn money.\nSpend less than you earn.\nInvest the difference.\nBreak the rules.\n\nHow you do the rules depends on your needs and wants. Here’s my guidance for how to be successful in following the rules. This is what I’ve learned and what has worked for me.\nEarn money.\n\nWork smart and hard at what you are good at, enjoy, and can do consistently for years.\nAssess and take calculated risks. Control what you can control. Realise that luck is out of your hands.\nInvest in yourself. Continually learn and evolve.\nHelp others. It’s not about you.\n\nSpend less than you earn.\n\nBudget. Know where your money goes. Spreadsheets are beautiful.\nSpending money is behaviour, not maths or spreadsheets. Don’t live in your spreadsheets.\nSpend money on experiences, not things. Enjoy the journey.\nBuy nice things. Quality over quantity.\nDelay gratification. Control your emotions. Be humble. Be hungry.\nHelp others. It’s not about you.\n\nInvest the difference.\n\nDon’t gamble, trade, or speculate. It’s a waste of time in the long term.\nBuy a house to live in if you live in Australia and pay off the debt mercilessly.\nBuy businesses (shares). Core investments in index tracking ETFs, and satellite investments in individual companies.\nDiversify. Don’t put everything you have into one thing.\nLeave your investments alone for decades. Don’t interrupt the power of compounding.\nInvest in being open to a life partner who makes you a better person. It will be the most important wealth decision of your life.\nHelp others. It’s not about you.\n\nBreak the rules.\n\nContext is crucial. Everyone is different in different circumstances.\nThink for yourself.\nKnow when to break the rules.\nSee the world as it is, not as you would have it be.\nAct to change the world as you would have it be.\nHelp others. It’s not about you.\n"},"index":{"title":"Welcome","links":["Blog","Wealth"],"tags":[],"content":"\nTrying to not take myself too seriously.\nRead the Blog.\nA few notes on Wealth."}}